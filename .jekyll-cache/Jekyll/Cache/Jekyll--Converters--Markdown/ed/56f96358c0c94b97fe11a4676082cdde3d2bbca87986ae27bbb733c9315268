I"÷<p>I was trying to add comment function under my personal website. Since my personal website was built on the github by jekyII, which is a static website. Therefore to implement the comment function, I need the help with the third-party software. Of course, disqus is the first candidate that you can think about but it is not good option for china user as some known reason. After searched some popular website comments tools, I decided to use gitalk to construct the comment function.</p>

<p>Github is all-powerful, you can find everything on it. Gittalk is a comment component based on Github Issue and Preact. Actually it is github project, designed for
the official website link is <a href="https://github.com/gitalk/gitalk#install">Gitalk</a> 
it is amazing easy to use and no need the server support in background. Moreover it can support multiple language includes Chinese among them.</p>

<p>The installation is simple, please refer to below procedure.</p>

<ol>
  <li>register a github application,as a GitHub application you need to get an authorization before use it. The path to open OAuth Apps page is github homepage-&gt;Settings-&gt;Developer Settings-&gt;OAuth Apps.<br /> 
<img src="/assets/image/others-gitalk-oauth-apps.png" alt="oAuth Apps" />
You must specify the website domain url in the Authorization callback URL field.
After registration, you will get a â€˜Client IDâ€™ and â€˜Client Secretâ€™, remember these two numbers, you will need to fill them in the following step.
<img src="/assets/image/others-gitalk-oauth-apps-clientID.png" alt="oAuth Apps" />
Please note, the user number is zero at this moment in where you havenâ€™t authenticate the application. You need to do it later.
Now you have register github application for gitalk.</li>
  <li>Next,copy below code into the page where you want to use gitalk or add it into the posts page, it depends on your website structure. <br />
<img src="/assets/image/others-gitalk-code.png" alt="code" />
below is the setting options.
â€”â€“
<strong>clientID</strong> String
Required. GitHub Application Client ID.
<strong>clientSecret</strong> String
Required. GitHub Application Client Secret.
<strong>repo</strong> String
Required. GitHub repository.
<strong>owner</strong> String
Required. GitHub repository owner. Can be personal user or organization.
<strong>admin</strong> Array
Required. GitHub repository owner and collaborators. (Users who having write access to this repository)
<strong>id</strong> String
Default: location.href.
The unique id of the page. Length must less than 50.
<strong>number</strong> Number
Default: -1.
The issue ID of the page, if the number attribute is not defined, issue will be located using id.
<strong>labels</strong> Array
Default: [â€˜Gitalkâ€™].
GitHub issue labels.
<strong>title</strong> String
Default: document.title.
GitHub issue title.
<strong>body</strong> String
Default: location.href + header.meta[description].
GitHub issue body.
<strong>language</strong> String
Default: navigator.language || navigator.userLanguage.
Localization language key, en, zh-CN and zh-TW are currently available.
<strong>perPage</strong> Number
Default: 10.
Pagination size, with maximum 100.
<strong>distractionFreeMode</strong> Boolean
Default: false.
Facebook-like distraction free mode.
<strong>pagerDirection</strong> String
Default: â€˜lastâ€™
Comment sorting direction, available values are last and first.
<strong>createIssueManually</strong> Boolean
Default: false.
By default, Gitalk will create a corresponding github issue for your every single page automatically when the logined user is belong to the admin users. You can create it manually by setting this option to true.
<strong>proxy</strong> String
Default: https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token.
GitHub oauth request reverse proxy for CORS. Why need this?
<strong>flipMoveOptions</strong> Object
Default:
  {
 staggerDelayBy: 150,
 appearAnimation: â€˜accordionVerticalâ€™,
 enterAnimation: â€˜accordionVerticalâ€™,
 leaveAnimation: â€˜accordionVerticalâ€™,
  }
Comment list animation. <a href="https://github.com/joshwcomeau/react-flip-move/blob/master/documentation/enter_leave_animations.md">Reference</a>
<strong>enableHotKey</strong> Boolean
Default: true.
Enable hot key (cmd|ctrl + enter) submit comment.</li>
</ol>

:ET