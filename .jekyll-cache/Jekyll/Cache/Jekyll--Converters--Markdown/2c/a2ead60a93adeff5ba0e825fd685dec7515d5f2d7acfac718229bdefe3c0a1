I"t<p>Today I want to add a auto TOC function to my blog. I used to write TOC manually and it is really boring. I found a good plugin <a href="https://Github.com/toshimaru/jekyll-toc">jekyll-toc</a> in the Github, which can fully meet my requirement.</p>

<h2 id="start">Start</h2>

<p>The installation is simple, I forked and installed the plugin successfully in 5 minutes.</p>

<p>After then, I was going to separate the TOC and post contents. I designed a sidebar to show the TOC independently by placing the <code class="language-plaintext highlighter-rouge">{% toc %}</code> tag into the sidebar.</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="c">&lt;!-- put sidebar! --&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"post-index-container"</span><span class="nt">&gt;</span>
	{% if page.language == 'chinese' %}
		<span class="nt">&lt;li</span> <span class="na">class = </span><span class="s">"post-index"</span><span class="nt">&gt;</span>文章目录<span class="nt">&lt;/li&gt;</span>
	{% else %}
		<span class="nt">&lt;li</span> <span class="na">class = </span><span class="s">"post-index"</span><span class="nt">&gt;</span>On this page<span class="nt">&lt;/li&gt;</span>
	{% endif %}
		<span class="nt">&lt;li&gt;</span>{% toc %}<span class="nt">&lt;/li&gt;</span>
<span class="nt">&lt;/div&gt;</span></code></pre></figure>

<p>I built the code locally by Jekyll and reloaded the page.</p>

<p>Cheers!</p>

<p>The TOC appeared, this was just what I want!</p>

<h2 id="i-got-a-trouble">I got a trouble</h2>

<p>Things are going really well so far, it is so easy?</p>

<p>No, I got a trouble when I committed the change to Github repository. The site was built failed by Github Pages generator.</p>

<figure class="highlight"><pre><code class="language-shell" data-lang="shell">The tag <span class="sb">`</span>toc<span class="sb">`</span> on line 32 <span class="k">in</span> <span class="sb">`</span>/_layouts/post.html<span class="sb">`</span> is not a recognized Liquid tag.</code></pre></figure>

<p>I realized immediately that this plugin wasn’t in the <a href="https://pages.Github.com/versions/">whitelist</a> of Github Pages. I forgot that!</p>

<p><img src="/daviddong.github.io/assets/image/blog-jekyll-toc-01.PNG" alt="notification" class="center-image" /></p>

<p>I have to use a trick way to skip the restriction. As above bulletin showed, I need to build the site locally and push the generated static files to my Github repository ( <strong>Don’t use Github Pages generator build</strong>).</p>

<h2 id="use-master-branch">Use Master branch</h2>

<p>Followed above information I checked the root path in my Github Pages, it was <code class="language-plaintext highlighter-rouge">master</code> branch.</p>

<p>So I added the site file <code class="language-plaintext highlighter-rouge">_site/</code> to the master branch and pushed to origin repository.</p>

<p>I referred two articles<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote">1</a></sup> here.</p>

<figure class="highlight"><pre><code class="language-shell" data-lang="shell">git add _site/
git commit <span class="nt">-m</span> <span class="s2">"add static site file"</span>
git push origin master</code></pre></figure>

<p><strong>However, it didn’t work!</strong></p>

<h2 id="use-gh-pages-branch">Use gh-pages branch</h2>

<p>There should be something wrong with above procedure.</p>

<p>I went back to google search for another solution.</p>

<p>Thanks to these two articles<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote">2</a></sup>.</p>

<p>I made it clear when I build the site by Github Pages generator, it actually creates a new branch <code class="language-plaintext highlighter-rouge">gh-pages</code> under master branch, in where it stores the static site files for external accessing. Therefore I need to create the <code class="language-plaintext highlighter-rouge">gh-pages</code> branch and place my <code class="language-plaintext highlighter-rouge">_site\</code> to there.</p>

<p>I changed the command as below.</p>

<figure class="highlight"><pre><code class="language-shell" data-lang="shell">git checkout <span class="nt">-b</span> gh-pages
<span class="nb">cp</span> <span class="nt">-r</span> _site/<span class="k">*</span> <span class="nb">.</span>
git add _site
git commit <span class="nt">-m</span> <span class="s2">"add site files"</span>
git push origin gh-pages</code></pre></figure>

<p><img src="/daviddong.github.io/assets/image/blog-jekyll-toc-02.PNG" alt="master-root" /></p>

<p><strong>It worked this time!</strong></p>

<p><img src="/daviddong.github.io/assets/image/blog-jekyll-toc-04.PNG" alt="toc@sidebar" /></p>

<h2 id="conclusion">Conclusion</h2>

<p>If you want to deploy your personal website on Github Pages with the unsupported plugins, you will need to build you site locally and create <code class="language-plaintext highlighter-rouge">gh-pages</code> branch and upload your site file to this branch. One important point is that you should use the branch as the root, which means placing the site file into the directory directly instead of a sub-directory.</p>

<p><img src="/daviddong.github.io/assets/image/blog-jekyll-toc-03.PNG" alt="master-root" /></p>
<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p><a href="">https://mccxj.Github.io/blog/20130127_jekyll-plugin-with-git-branch.html</a> <a href="">https://www.cnblogs.com/ihardcoder/p/4479356.html</a> <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">
      <p><a href="https://www.it1352.com/798173.html">https://www.it1352.com/798173.html</a> <a href="https://www.it1352.com/798173.html">https://www.cnblogs.com/pengshuo/p/5368035.html</a>, <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>
:ET