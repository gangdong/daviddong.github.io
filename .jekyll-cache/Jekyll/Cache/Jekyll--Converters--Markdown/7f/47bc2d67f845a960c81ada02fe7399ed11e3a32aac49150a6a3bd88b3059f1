I"<p>本文对Java里的引用的概念做一个简单的总结，不做过多的阐述。</p>

<p>Java里面除了基本数据类型外,其他所有对象的引用都是指针引用.基本数据类型也可以用对象来引用。 所谓指针引用就是传递的是对象的地址,而不是该对象值的拷贝。<br /></p>

<p>因此从这一点上来说Java的引用和C++里面的指针的作用是一致的。<br />
Java 里的引用和c++的区别是 c++里的指针类型变量可以做运算,强制类型转换。 Java里面的引用避免了这个问题.<br />
Java 语言的安全性高 一方面是所有的引用都是对象引用,没有指针的概念。 另一个方面自动垃圾回收机制,避免了内存泄露。
<br />
Java的基本数据类型及其封装类如下。</p>

<table>
  <thead>
    <tr>
      <th>数据类型</th>
      <th>封装类</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>byte</td>
      <td>Byte</td>
    </tr>
    <tr>
      <td>char</td>
      <td>Character</td>
    </tr>
    <tr>
      <td>double</td>
      <td>Double</td>
    </tr>
    <tr>
      <td>float</td>
      <td>Float</td>
    </tr>
    <tr>
      <td>int</td>
      <td>Integer</td>
    </tr>
    <tr>
      <td>long</td>
      <td>Long</td>
    </tr>
    <tr>
      <td>short</td>
      <td>Short</td>
    </tr>
    <tr>
      <td>boolean</td>
      <td>Boolean</td>
    </tr>
  </tbody>
</table>

<p>这些基本类型的封装类提供了一些方法，例如toString(),和包括与其他类型之间的相互转换等。<br /></p>
:ET