<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/daviddong.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/daviddong.github.io/" rel="alternate" type="text/html" /><updated>2021-03-30T13:32:29+08:00</updated><id>http://localhost:4000/daviddong.github.io/feed.xml</id><title type="html">David Dong’s Blog</title><subtitle>This is DavidDong's blog. This blog recorded the time of my life and learning from it. Welcome to visit! 
</subtitle><author><name>David Dong</name></author><entry><title type="html">Display mathematics formula in blog with MathJax</title><link href="http://localhost:4000/daviddong.github.io/blog/2021/03/20/Blog-mathjax.html" rel="alternate" type="text/html" title="Display mathematics formula in blog with MathJax" /><published>2021-03-20T11:11:12+08:00</published><updated>2021-03-20T11:11:12+08:00</updated><id>http://localhost:4000/daviddong.github.io/blog/2021/03/20/Blog-mathjax</id><content type="html" xml:base="http://localhost:4000/daviddong.github.io/blog/2021/03/20/Blog-mathjax.html">&lt;p&gt;When writing posts, I need to display mathematics formula sometimes. I write posts with Markdown, I don’t want to save the formula into an image and load the image in markdown. It is better write the Latex formula in markdown file directly. MathJax helped me do it. This article will introduce what MathJax is and how to use MathJax.&lt;/p&gt;

&lt;h2 id=&quot;what-is-mathjax&quot;&gt;What is MathJax?&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is the definition of the MathJax in &lt;a href=&quot;https://www.mathjax.org/&quot;&gt;MathJax official website&lt;/a&gt;, more information can be found from there.&lt;/p&gt;

&lt;p&gt;To me, it brought some benefits for writing blog.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;No need plugin support in Jekyll. I don’t have to worry about that it cannot be implemented when deploying the site at Github Pages for security checking.&lt;/li&gt;
  &lt;li&gt;Unlike using bitmaps image to display, it is text editing and transforms the mathematics formula to HTML or SVG, so it is workable for zoom scale and is suitable to display under different size screen.&lt;/li&gt;
  &lt;li&gt;I can write the mathematics formula in markdown with plain text just by following the syntax of LaTex/TeX.&lt;/li&gt;
  &lt;li&gt;Friendly to new user, you can quickly use it even you have no any knowledge about it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Moreover, looks MathJax has become into the most popular solution for rendering the Latex mathematics formula in the web application.&lt;/p&gt;

&lt;p&gt;At least, I think so.&lt;/p&gt;

&lt;h2 id=&quot;how-to-implement&quot;&gt;How to implement?&lt;/h2&gt;

&lt;h3 id=&quot;including-mathjax-in-a-web-page&quot;&gt;Including MathJax in a web page&lt;/h3&gt;
&lt;p&gt;As I said, one of the benefit of MathJax is that you don’t need to install any plugin to implement it, just introduce a piece of JavaScript code into your page’s HTML.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I added above snippet into my &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;default.html&lt;/code&gt;, you can insert it into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;head.html&lt;/code&gt; or any page’s HTML where you want to use MathJax.&lt;/p&gt;

&lt;h3 id=&quot;configuration&quot;&gt;Configuration&lt;/h3&gt;

&lt;p&gt;Here &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TeX-MML-AM_CHTML&lt;/code&gt; is the configuration for common user case.
For more configuration, can find at &lt;a href=&quot;https://docs.mathjax.org/en/latest/web/configuration.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;MathJax offers a global object named MathJax that contains configuration data for the various components of MathJax.&lt;/p&gt;

&lt;p&gt;For TeX or LaTeX input component , it has two types. One is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;in-line mathematics&lt;/code&gt;(display in paragraph) and the other is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;displayed mathematics&lt;/code&gt;(display as a single paragraph).&lt;/p&gt;

&lt;p&gt;It uses double dollar sign &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$$&lt;/code&gt; as the default math delimiters for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;displayed mathematics&lt;/code&gt;, uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(\...\)&lt;/code&gt; as the math delimiters for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;in-line mathematics&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here as an example, I inserted below code snippet to add single dollar &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt; signs as in-line math delimiters.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/x-mathjax-config&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;MathJax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tex2jax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inlineMath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]}});&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It is better place the MathJax object in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag just before the script that loads MathJax itself.&lt;/p&gt;

&lt;p&gt;So my last code is&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/x-mathjax-config&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;MathJax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tex2jax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inlineMath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]}});&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;mathematics-expression-with-mathjax&quot;&gt;Mathematics expression with MathJax&lt;/h3&gt;

&lt;p&gt;I wrote below words as startup.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi, there,   &lt;br /&gt;
This is my first MathJax equation.  &lt;br /&gt;
When $a \ne 0$, there are two solutions to&lt;/p&gt;
  &lt;div&gt;$$ax^2 + bx + c = 0$$&lt;/div&gt;
  &lt;p&gt;and they are&lt;/p&gt;
  &lt;div&gt;$$x = {-b \pm \sqrt{b^2-4ac} \over 2a}.$$&lt;/div&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;write-at-the-last&quot;&gt;Write at the last&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;I found importing the MathJax snippet will slow the site’s loading speed. So I moved the MathJax snippet to the post’s markdown file from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;default.html&lt;/code&gt;, only use it when the post need a mathematics expression.&lt;/li&gt;
  &lt;li&gt;I am not familiar with Latex syntax and I will spend some time in learning. It is not a problem! 😛&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;text/javascript&quot; async=&quot;&quot; src=&quot;//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML&quot;&gt;
&lt;/script&gt;

&lt;script type=&quot;text/x-mathjax-config&quot;&gt;
  MathJax.Hub.Config({tex2jax: {
			skipTags: ['script', 'noscript', 'style', 'textarea', 'pre'],
			inlineMath: [['$','$'], ['\\(','\\)']]
		}
	});
&lt;/script&gt;</content><author><name>david.dong</name></author><category term="Blog" /><category term="Blog" /><summary type="html">When writing posts, I need to display mathematics formula sometimes. I write posts with Markdown, I don’t want to save the formula into an image and load the image in markdown. It is better write the Latex formula in markdown file directly. MathJax helped me do it. This article will introduce what MathJax is and how to use MathJax.</summary></entry><entry><title type="html">Display mathematics formula in blog with MathJax</title><link href="http://localhost:4000/daviddong.github.io/blog/2021/03/20/Blog-travisci.html" rel="alternate" type="text/html" title="Display mathematics formula in blog with MathJax" /><published>2021-03-20T11:11:12+08:00</published><updated>2021-03-20T11:11:12+08:00</updated><id>http://localhost:4000/daviddong.github.io/blog/2021/03/20/Blog-travisci</id><content type="html" xml:base="http://localhost:4000/daviddong.github.io/blog/2021/03/20/Blog-travisci.html">&lt;p&gt;When writing posts, I need to display mathematics formula sometimes. I write posts with Markdown, I don’t want to save the formula into an image and load the image in markdown. It is better write the Latex formula in markdown file directly. MathJax helped me do it. This article will introduce what MathJax is and how to use MathJax.&lt;/p&gt;

&lt;h2 id=&quot;what-is-mathjax&quot;&gt;What is MathJax?&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is the definition of the MathJax in &lt;a href=&quot;https://www.mathjax.org/&quot;&gt;MathJax official website&lt;/a&gt;, more information can be found from there.&lt;/p&gt;

&lt;p&gt;To me, it brought some benefits for writing blog.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;No need plugin support in Jekyll. I don’t have to worry about that it cannot be implemented when deploying the site at Github Pages for security checking.&lt;/li&gt;
  &lt;li&gt;Unlike using bitmaps image to display, it is text editing and transforms the mathematics formula to HTML or SVG, so it is workable for zoom scale and is suitable to display under different size screen.&lt;/li&gt;
  &lt;li&gt;I can write the mathematics formula in markdown with plain text just by following the syntax of LaTex/TeX.&lt;/li&gt;
  &lt;li&gt;Friendly to new user, you can quickly use it even you have no any knowledge about it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Moreover, looks MathJax has become into the most popular solution for rendering the Latex mathematics formula in the web application.&lt;/p&gt;

&lt;p&gt;At least, I think so.&lt;/p&gt;

&lt;h2 id=&quot;how-to-implement&quot;&gt;How to implement?&lt;/h2&gt;

&lt;h3 id=&quot;including-mathjax-in-a-web-page&quot;&gt;Including MathJax in a web page&lt;/h3&gt;
&lt;p&gt;As I said, one of the benefit of MathJax is that you don’t need to install any plugin to implement it, just introduce a piece of JavaScript code into your page’s HTML.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I added above snippet into my &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;default.html&lt;/code&gt;, you can insert it into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;head.html&lt;/code&gt; or any page’s HTML where you want to use MathJax.&lt;/p&gt;

&lt;h3 id=&quot;configuration&quot;&gt;Configuration&lt;/h3&gt;

&lt;p&gt;Here &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TeX-MML-AM_CHTML&lt;/code&gt; is the configuration for common user case.
For more configuration, can find at &lt;a href=&quot;https://docs.mathjax.org/en/latest/web/configuration.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;MathJax offers a global object named MathJax that contains configuration data for the various components of MathJax.&lt;/p&gt;

&lt;p&gt;For TeX or LaTeX input component , it has two types. One is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;in-line mathematics&lt;/code&gt;(display in paragraph) and the other is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;displayed mathematics&lt;/code&gt;(display as a single paragraph).&lt;/p&gt;

&lt;p&gt;It uses double dollar sign &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$$&lt;/code&gt; as the default math delimiters for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;displayed mathematics&lt;/code&gt;, uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(\...\)&lt;/code&gt; as the math delimiters for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;in-line mathematics&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here as an example, I inserted below code snippet to add single dollar &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt; signs as in-line math delimiters.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/x-mathjax-config&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;MathJax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tex2jax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inlineMath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]}});&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It is better place the MathJax object in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag just before the script that loads MathJax itself.&lt;/p&gt;

&lt;p&gt;So my last code is&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/x-mathjax-config&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;MathJax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tex2jax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inlineMath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]}});&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;mathematics-expression-with-mathjax&quot;&gt;Mathematics expression with MathJax&lt;/h3&gt;

&lt;p&gt;I wrote below words as startup.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi, there,   &lt;br /&gt;
This is my first MathJax equation.  &lt;br /&gt;
When $a \ne 0$, there are two solutions to&lt;/p&gt;
  &lt;div&gt;$$ax^2 + bx + c = 0$$&lt;/div&gt;
  &lt;p&gt;and they are&lt;/p&gt;
  &lt;div&gt;$$x = {-b \pm \sqrt{b^2-4ac} \over 2a}.$$&lt;/div&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;write-at-the-last&quot;&gt;Write at the last&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;I found importing the MathJax snippet will slow the site’s loading speed. So I moved the MathJax snippet to the post’s markdown file from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;default.html&lt;/code&gt;, only use it when the post need a mathematics expression.&lt;/li&gt;
  &lt;li&gt;I am not familiar with Latex syntax and I will spend some time in learning. It is not a problem! 😛&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;text/javascript&quot; async=&quot;&quot; src=&quot;//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML&quot;&gt;
&lt;/script&gt;

&lt;script type=&quot;text/x-mathjax-config&quot;&gt;
  MathJax.Hub.Config({tex2jax: {
			skipTags: ['script', 'noscript', 'style', 'textarea', 'pre'],
			inlineMath: [['$','$'], ['\\(','\\)']]
		}
	});
&lt;/script&gt;</content><author><name>david.dong</name></author><category term="Blog" /><category term="Blog" /><summary type="html">When writing posts, I need to display mathematics formula sometimes. I write posts with Markdown, I don’t want to save the formula into an image and load the image in markdown. It is better write the Latex formula in markdown file directly. MathJax helped me do it. This article will introduce what MathJax is and how to use MathJax.</summary></entry><entry><title type="html">Use jekyll-toc plugin on Github Pages</title><link href="http://localhost:4000/daviddong.github.io/blog/github/2021/03/14/Blog-Jekyll-toc-plugin.html" rel="alternate" type="text/html" title="Use jekyll-toc plugin on Github Pages" /><published>2021-03-14T21:11:16+08:00</published><updated>2021-03-14T21:11:16+08:00</updated><id>http://localhost:4000/daviddong.github.io/blog/github/2021/03/14/Blog-Jekyll-toc-plugin</id><content type="html" xml:base="http://localhost:4000/daviddong.github.io/blog/github/2021/03/14/Blog-Jekyll-toc-plugin.html">&lt;p&gt;Today I want to add a auto TOC function to my blog. I used to write TOC manually and it is really boring. I found a good plugin &lt;a href=&quot;https://Github.com/toshimaru/jekyll-toc&quot;&gt;jekyll-toc&lt;/a&gt; in the Github, which can fully meet my requirement.&lt;/p&gt;

&lt;h2 id=&quot;start&quot;&gt;Start&lt;/h2&gt;

&lt;p&gt;The installation is simple, I forked and installed the plugin successfully in 5 minutes.&lt;/p&gt;

&lt;p&gt;After then, I was going to separate the TOC and post contents. I designed a sidebar to show the TOC independently by placing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{% toc %}&lt;/code&gt; tag into the sidebar.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- put sidebar! --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-index-container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	{% if page.language == 'chinese' %}
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class = &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-index&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;文章目录&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
	{% else %}
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class = &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-index&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;On this page&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
	{% endif %}
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;{% toc %}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I built the code locally by Jekyll and reloaded the page.&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;

&lt;p&gt;The TOC appeared, this was just what I want!&lt;/p&gt;

&lt;h2 id=&quot;i-got-a-trouble&quot;&gt;I got a trouble&lt;/h2&gt;

&lt;p&gt;Things are going really well so far, it is so easy?&lt;/p&gt;

&lt;p&gt;No, I got a trouble when I committed the change to Github repository. The site was built failed by Github Pages generator.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;The tag &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;toc&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; on line 32 &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/_layouts/post.html&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; is not a recognized Liquid tag.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I realized immediately that this plugin wasn’t in the &lt;a href=&quot;https://pages.Github.com/versions/&quot;&gt;whitelist&lt;/a&gt; of Github Pages. I forgot that!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/blog-jekyll-toc-01.PNG&quot; alt=&quot;notification&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have to use a trick way to skip the restriction. As above bulletin showed, I need to build the site locally and push the generated static files to my Github repository ( &lt;strong&gt;Don’t use Github Pages generator build&lt;/strong&gt;).&lt;/p&gt;

&lt;h2 id=&quot;use-master-branch&quot;&gt;Use Master branch&lt;/h2&gt;

&lt;p&gt;Followed above information I checked the root path in my Github Pages, it was &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;So I added the site file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_site/&lt;/code&gt; to the master branch and pushed to origin repository.&lt;/p&gt;

&lt;p&gt;I referred two articles&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; here.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git add _site/
git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;add static site file&quot;&lt;/span&gt;
git push origin master&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;However, it didn’t work!&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;use-gh-pages-branch&quot;&gt;Use gh-pages branch&lt;/h2&gt;

&lt;p&gt;There should be something wrong with above procedure.&lt;/p&gt;

&lt;p&gt;I went back to google search for another solution.&lt;/p&gt;

&lt;p&gt;Thanks to these two articles&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;I made it clear when I build the site by Github Pages generator, it actually creates a new branch &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; under master branch, in where it stores the static site files for external accessing. Therefore I need to create the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; branch and place my &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_site\&lt;/code&gt; to there.&lt;/p&gt;

&lt;p&gt;I changed the command as below.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;git checkout &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; gh-pages
&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; _site/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
git add _site
git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;add site files&quot;&lt;/span&gt;
git push origin gh-pages&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/blog-jekyll-toc-02.PNG&quot; alt=&quot;master-root&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It worked this time!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/blog-jekyll-toc-04.PNG&quot; alt=&quot;toc@sidebar&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;If you want to deploy your personal website on Github Pages with the unsupported plugins, you will need to build you site locally and create &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; branch and upload your site file to this branch. One important point is that you should use the branch as the root, which means placing the site file into the directory directly instead of a sub-directory.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/blog-jekyll-toc-03.PNG&quot; alt=&quot;master-root&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;&quot;&gt;https://mccxj.Github.io/blog/20130127_jekyll-plugin-with-git-branch.html&lt;/a&gt; &lt;a href=&quot;&quot;&gt;https://www.cnblogs.com/ihardcoder/p/4479356.html&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.it1352.com/798173.html&quot;&gt;https://www.it1352.com/798173.html&lt;/a&gt; &lt;a href=&quot;https://www.it1352.com/798173.html&quot;&gt;https://www.cnblogs.com/pengshuo/p/5368035.html&lt;/a&gt;, &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>david.dong</name></author><category term="Blog" /><category term="Github" /><category term="Blog" /><category term="Github" /><summary type="html">Today I want to add a auto TOC function to my blog. I used to write TOC manually and it is really boring. I found a good plugin jekyll-toc in the Github, which can fully meet my requirement.</summary></entry><entry><title type="html">A quick way to fix the Gitalk Error: Validation Failed</title><link href="http://localhost:4000/daviddong.github.io/blog/2021/03/08/Web-gitalk-fixing.html" rel="alternate" type="text/html" title="A quick way to fix the Gitalk Error: Validation Failed" /><published>2021-03-08T10:27:13+08:00</published><updated>2021-03-08T10:27:13+08:00</updated><id>http://localhost:4000/daviddong.github.io/blog/2021/03/08/Web-gitalk-fixing</id><content type="html" xml:base="http://localhost:4000/daviddong.github.io/blog/2021/03/08/Web-gitalk-fixing.html">&lt;p&gt;I’ve met an error &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Validation Failed (422)&lt;/code&gt; when using Gitalk in my blog.&lt;/p&gt;

&lt;p&gt;I posted a new article in my blog and found the Gitalk report such issue. My Gitalk has been working for a long time before this issue occurs. I’ve checked that the Gitalk for my other posts works normal and only the new post has issue, which means the issue should be a standalone problem that related to the post self.&lt;/p&gt;

&lt;p&gt;By searching google &lt;a href=&quot;https://github.com/gitalk/gitalk/issues/102&quot;&gt;gitalk issue #102&lt;/a&gt; I understood the problem is that the length of my new post’s URL is excessive long &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(&amp;gt; 50 characters)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For every post, the Gitalk will create an issue under your blog project repository in Github to track the comment thread. The issue id is used to form the issue’s label and Gitalk uses the label to identify comment thread.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/web-gitalk-fix-01.PNG&quot; alt=&quot;example&quot; title=&quot;example&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;However the problem here is that label length is restricted to maximum 50 characters ( Not sure if it is a hidden rule or a BUG here 😕 ).&lt;/p&gt;

&lt;p&gt;In my Gitalk configuration, the issue id is set to&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So if the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;page.url&lt;/code&gt; is too long and is beyond the restriction, the issue’s label cannot be created and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Validation Failed&lt;/code&gt; error will be threw out.&lt;/p&gt;

&lt;p&gt;Since limitation is clear now, let’s fix it.    &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The straightforward way is to use a shorter URL to avoid this issue. But I don’t like this restriction that blocking I write post. To convert the URL to a fixed length string looks like a better solution. Why not try hash function? The interesting thing is that I found there has already been a same solution online &lt;a href=&quot;https://blog.csdn.net/death05/article/details/83618887&quot;&gt;-&amp;gt; issue fix&lt;/a&gt;, which use the &lt;strong&gt;MD5&lt;/strong&gt; method. This method not only unifies the URL length but also differentiates them.&lt;/p&gt;

&lt;p&gt;It is good!&lt;/p&gt;

&lt;p&gt;There is workable &lt;a href=&quot;https://github.com/blueimp/JavaScript-MD5&quot;&gt;JavaScript-MD5&lt;/a&gt; lib on the Github, I folk it and the rest thing is quite simple.&lt;/p&gt;

&lt;p&gt;I add the &lt;strong&gt;MD5 JS&lt;/strong&gt; calling in my &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;comments.html&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/daviddong.github.io/assets/js/md5.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and reset the Gitalk id to&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Commit the change.&lt;/p&gt;

&lt;p&gt;I reopen the page and the error is gone, by checking the Gitalk issue label, it has been converted to MD5 code.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/web-gitalk-fix-02.PNG&quot; alt=&quot;example&quot; title=&quot;example&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Which means the solution is working now! 😊&lt;/p&gt;</content><author><name>david.dong</name></author><category term="Blog" /><category term="Blog" /><summary type="html">I’ve met an error Validation Failed (422) when using Gitalk in my blog.</summary></entry><entry><title type="html">Build TA images on different TEE</title><link href="http://localhost:4000/daviddong.github.io/android/fingerprint/2021/02/04/Fingerprint-build-ta.html" rel="alternate" type="text/html" title="Build TA images on different TEE" /><published>2021-02-04T12:21:47+08:00</published><updated>2021-02-04T12:21:47+08:00</updated><id>http://localhost:4000/daviddong.github.io/android/fingerprint/2021/02/04/Fingerprint-build-ta</id><content type="html" xml:base="http://localhost:4000/daviddong.github.io/android/fingerprint/2021/02/04/Fingerprint-build-ta.html">&lt;p&gt;This article will give a introduction on how to build TA images on different TrustZone.&lt;/p&gt;

&lt;h2 id=&quot;1-about-tee&quot;&gt;&lt;span id=&quot;1&quot;&gt;1. About TEE&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Nowadays, any security related application must run on the TEE. TEE (Trusted Execution Environment) is able to provide a absolute-safe environment for any user security requirement. Fingerprint application as one kind of biometric authentication, it is a trusted application and must run on the TEE. Here I will take Fingerprint application as an example to introduce how to build the trusted application (TA) image.&lt;/p&gt;

&lt;p&gt;Before start, I want to use below diagram for presenting a short description on how TEE works on fingerprint application.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/fingerprint-build-ta-01.png&quot; alt=&quot;fingerprint-tee&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The main control flow, handling the various use cases, is implemented in REE (Fingerprint HAL). Images from the sensor are captured on the TEE side and managed by fingerprint library, which also coordinates data flow towards the submodules implementing various algorithms for image processing and biometric processing. Enrolled fingerprint templates are managed in a RAM database in Fingerprint TA, and encrypted before passed to REE side for persistent storage. when authentication occurred, the matcher algorithm in the TEE side will work and give the matching result to REE. The communication channel - SPI transmission is physical in TEE and normally works by calling TEE API.&lt;/p&gt;

&lt;p&gt;The software module working on TEE side are normally built into a binary file, which runs on the TEE OS as an executable application (Trusted Application). Different TEE OS can support different number of Trusted Application (TA).&lt;/p&gt;

&lt;p&gt;There are multiple commercial TEE OS on the Android platform supported by the third-part companies, some popular ones among them are QSEE, ISEE, Trusty. The following content will introduce how the fingerprint TA image is built out on these TEE OS.&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-qsee-5&quot;&gt;&lt;span id=&quot;2&quot;&gt;2. QSEE 5&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;QSEE is one TEE OS supported by Qualcomm. In android market, system running with Qualcomm platform uses the QSEE Trustzone. QSEE provides a set of SDK that help the developer to develop the TEE application and generate the image file (TA image).&lt;/p&gt;

&lt;h3 id=&quot;21-sdk-&quot;&gt;&lt;span id=&quot;2.1&quot;&gt;2.1 SDK &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;To build the TA image, we need to use QSEE SDK, which can be got from Qualcomm or ODMs. Here I use QSEE5 SDK and put it to below location in my unbuntu.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;sr&quot;&gt;/home/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;david&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devtools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tz_qsee5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;22-code-&quot;&gt;&lt;span id=&quot;2.2&quot;&gt;2.2 Code &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Next we need to put the source code of Fingerprint TA into place that the SDK can find it and make.
In QSEE, normally there is specific location in the SDK file tree for storing the TA code.  &lt;br /&gt;
It is at path:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;sr&quot;&gt;/home/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;david&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devtools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tz_qsee5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;securemsm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trustzone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;qsapps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;23-build-&quot;&gt;&lt;span id=&quot;2.3&quot;&gt;2.3 Build &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;We executes the build command to make the TA code and generate the TA image.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/home/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;david&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devtools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tz_qsee5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;python&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;py&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TZ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;XF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CHIPSET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sdm845&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cbt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$(FPC_CONFIG_TZ_IMAGE_NAME)&quot;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_flags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Build process
&lt;img src=&quot;/daviddong.github.io/assets/image/fingerprint-build-ta-02.png&quot; alt=&quot;fingerprint-tee&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;24-image-&quot;&gt;&lt;span id=&quot;2.4&quot;&gt;2.4 Image &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;TA images are generated at path:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;sr&quot;&gt;/home/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;david&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devtools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tz_qsee5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;PIL_IMAGES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SPLITBINS_WAXAANAA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;
The TA images are&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;fpctzappfingerprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;b00&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fpctzappfingerprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;b01&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fpctzappfingerprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;b02&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fpctzappfingerprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;b03&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fpctzappfingerprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;b04&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fpctzappfingerprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;b05&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fpctzappfingerprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;b06&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fpctzappfingerprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;b07&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fpctzappfingerprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mdt&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;3-isee-&quot;&gt;&lt;span id=&quot;3&quot;&gt;3. ISEE &lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;There is no property TEE OS under MTK platform. It adopts the way of integrating the TEE environment of a third party. The common TEE manufacturers ISEE.&lt;/p&gt;

&lt;h3 id=&quot;31-sdk-&quot;&gt;&lt;span id=&quot;2.1&quot;&gt;3.1 SDK &lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;For ISEE SDK, it can find more details on this link &lt;a href=&quot;https://www.beanpodtech.com/%e4%b8%bb%e8%a6%81%e4%ba%a7%e5%93%81/isee-sdk/&quot;&gt;「ISEE SDK」&lt;/a&gt;
I put the SDK into below location.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;sr&quot;&gt;/home/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;david&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devtools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isee_sdk_270&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;32-code-&quot;&gt;&lt;span id=&quot;3.2&quot;&gt;3.2 Code &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Put the TA source code to below path&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;sr&quot;&gt;/home/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;david&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devtools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;platforms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mt6797&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vendor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fingerprints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;33-build-&quot;&gt;&lt;span id=&quot;3.3&quot;&gt;3.3 Build &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Run command&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/home/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;david&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devtools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isee_sdk_270&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setenv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sh&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/home/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;david&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devtools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;platforms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mt6797&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vendor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fingerprints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fingerprint_ta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isee&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;make&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Build process
&lt;img src=&quot;/daviddong.github.io/assets/image/fingerprint-build-ta-03.png&quot; alt=&quot;fingerprint-tee&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;34-image-&quot;&gt;&lt;span id=&quot;3.4&quot;&gt;3.4 image &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;TA image is generated at path&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;sr&quot;&gt;/home/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;david&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devtools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;platforms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mt6797&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vendor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fingerprints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fingerprint_ta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7778&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c03fc30c4dd0a319ea29643d4d4b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ta&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It uses the UUID of the TA as the TA name, which is UUID.ta&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;4-trusty-&quot;&gt;&lt;span id=&quot;4&quot;&gt;4. Trusty &lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;Trusty TEE is originated and supported by Google, which is integrated into the android as a secure Operating System (OS) that provides a Trusted Execution Environment (TEE).
For more details about Trusty, please refer to  &lt;a href=&quot;https://source.android.com/security/trusty&quot;&gt;「Trusty TEE」&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;41-sdk-&quot;&gt;&lt;span id=&quot;4.1&quot;&gt;4.1 SDK &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Find a location in your local device.
For example, I put the trusty SDK here.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;sr&quot;&gt;/home/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;david&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devtools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trusty_sdk&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;42-code-&quot;&gt;&lt;span id=&quot;4.2&quot;&gt;4.2 Code &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Copy the TA source code to the SDK folder.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;sr&quot;&gt;/home/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;david&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devtools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trusty_sdk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;demo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;43-build-&quot;&gt;&lt;span id=&quot;4.3&quot;&gt;4.3 Build &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Run command&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/home/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;david&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devtools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trusty_sdk&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;make&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;app/demo/fpctzapp:TA&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Build process
&lt;img src=&quot;/daviddong.github.io/assets/image/fingerprint-build-ta-04.png&quot; alt=&quot;fingerprint-tee&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;44-image-&quot;&gt;&lt;span id=&quot;4.4&quot;&gt;4.4 image &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;The TA image is generated at below location after compiling completed.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;sr&quot;&gt;/home/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;david&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devtools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trusty_sdk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;demo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fpctzapp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fpctzapp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;elf&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;/home/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;david&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;devtools&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trusty_sdk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;demo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fpctzapp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fpctzapp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;elf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fpctzapp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;syms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;elf&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It uses the TA name that defined at the configuration as the image name, which is TA_Name.elf. 
Such as fpctzapp.elf. The TA_Name.syms.elf is the image file that containing the symbols table which can be used for debugging purpose.&lt;/p&gt;</content><author><name>david.dong</name></author><category term="Android" /><category term="Fingerprint" /><category term="Android" /><category term="Fingerprint" /><summary type="html">This article will give a introduction on how to build TA images on different TrustZone.</summary></entry><entry><title type="html">Some useful knowledge for Fingerprint Application on Trusty TEE</title><link href="http://localhost:4000/daviddong.github.io/android/fingerprint/2020/12/02/Fingerprint-Trusty.html" rel="alternate" type="text/html" title="Some useful knowledge for Fingerprint Application on Trusty TEE" /><published>2020-12-02T22:24:12+08:00</published><updated>2020-12-02T22:24:12+08:00</updated><id>http://localhost:4000/daviddong.github.io/android/fingerprint/2020/12/02/Fingerprint-Trusty</id><content type="html" xml:base="http://localhost:4000/daviddong.github.io/android/fingerprint/2020/12/02/Fingerprint-Trusty.html">&lt;p&gt;I have completed a Android platform fingerprint application on Trusty TEE recently for my work. This page will try to give some useful information, which is a summary of my work and might be helpful for somebody who want to bring up fingerprint application on Trusty TEE.&lt;/p&gt;

&lt;h2 id=&quot;1-trusty-tee&quot;&gt;&lt;span id=&quot;1&quot;&gt;1. Trusty TEE&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;As one of the biometric authentication on Android platform, fingerprint implementation must meet android security specifications. Android uses a separated secure Operating System (OS) to guarantee the security of biometric application - we call it TEE (Trusted Execution Environment), Which runs on the same processor as the Android OS and is isolated from the rest of the system by both hardware and software. They run parallel to each other but secure OS has access to the full power of a device’s main processor and memory but is completely isolated.&lt;/p&gt;

&lt;p&gt;There are multiple commercial TEE OS on the Android platform supported by the third-part companies, Such as QSEE, ISEE, TBase and so on. Trusty is one of them and unlike them Trusty TEE is supported by Google. Trusty TEE is trying to provide the users a reliable and free open source alternative for their Trusted Execution Environment.&lt;/p&gt;

&lt;p&gt;Google official documents provides more information about
&lt;a href=&quot;https://source.android.com/security/trusty&quot;&gt;「Trusty TEE」&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;2-memory-restriction&quot;&gt;&lt;span id=&quot;2&quot;&gt;2. Memory restriction&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;21-memory&quot;&gt;&lt;span id=&quot;2.1&quot;&gt;2.1 Memory&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;The total memory that Trusty TEE can provide is 32M, suggests allocate 10M memory (heap + stack + ta image) for fingerprint to use. For example, using 6M heap and 3M stack.&lt;/p&gt;
&lt;h3 id=&quot;22-buffer&quot;&gt;&lt;span id=&quot;2.2&quot;&gt;2.2 Buffer&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;a. The communication between CA and TA is limited in size, and the overall size is limited to 128KB, including message header. Therefore, the buffer size &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TAC_SHARED_BUFFER_SIZE&lt;/code&gt; should be less than 128K.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot; data-lang=&quot;plaintext&quot;&gt;#define TAC_SHARED_BUFFER_SIZE 1024 * 120 //should not be greater than 128k&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;b. Accordingly, the actual data size that can be used for effective transmission between CA and TA is limited to&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ta_target_commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int32_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot; data-lang=&quot;plaintext&quot;&gt;/* ISEE may need extra room for their own header */
#if defined(ISEE)
#define MAX_CHUNK ((SECURE_BUFFER_MAX_SIZE) - (MAX_COMMAND_SIZE) - 64)
#elif defined(TOS)
#define MAX_CHUNK ((SECURE_BUFFER_MAX_SIZE) - (MAX_COMMAND_SIZE) - 4)
#else
#define MAX_CHUNK ((SECURE_BUFFER_MAX_SIZE) - (MAX_COMMAND_SIZE))
#endif&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;c. When the data to be transferred is greater than the maximum limit, consider transferring in batches.&lt;/li&gt;
  &lt;li&gt;d. Change the size of heap and stack in the manifest file.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;n&quot;&gt;trusty_app_manifest_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRUSTY_APP_MANIFEST_ATTRS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trusty_app_manifest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 
        &lt;span class=&quot;cm&quot;&gt;/* UUID : {4304bef6-36e5-4d90-94b0-1ea4cd51d40b} */&lt;/span&gt;
       &lt;span class=&quot;cm&quot;&gt;/* { 0x4304bef6, 0x36e5, 0x4d90,
        { 0x94, 0xb0, 0x1e, 0xa4, 0xcd, 0x51, 0xd4, 0x0b } }, */&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x4304bef6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x36e5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x4d91&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x94&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xb0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xa4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x51&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xd4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0c&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
 
     &lt;span class=&quot;cm&quot;&gt;/* optional configuration options here */&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;cm&quot;&gt;/*apply 6M heap and 3M stack*/&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;TRUSTY_APP_CONFIG_MIN_HEAP_SIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;TRUSTY_APP_CONFIG_MIN_STACK_SIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;3-tee-communication&quot;&gt;&lt;span id=&quot;3&quot;&gt;3. TEE Communication&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Adopt the dynamic TA mechanism which will load TA and run TA’s main function when CA calls function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;connect()&lt;/code&gt;. When CA calls &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;disconnect()&lt;/code&gt; the TA process exits. Therefore, in a life cycle, there is no  need to connect or disconnect each IPC communication.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;There are many IPC communications between CA and TA. Every time IPC communication, the buffer received and sent by CA needs to be reallocated. The same buffer should not be used by IPC multiple times. In our code this method has already been implemented.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;Trusty TEE provides 2 ports for communication, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;secure port&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;non-secure port&lt;/code&gt;. &lt;br /&gt;
 &lt;strong&gt;Secure port&lt;/strong&gt; - for other TA app access.&lt;br /&gt;
 &lt;strong&gt;Non secure port&lt;/strong&gt; - for CA access TA app.&lt;br /&gt;
 For fingerprint, it needs to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;non-secure port&lt;/code&gt; and if has payment requirement, needs to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;secure port&lt;/code&gt;.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;Should define the same port name between CA and TA, An example that we are using “com.android.trusty.fpctzapp”.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;Should use unique uuid to differentiate with other fingerprint vendor.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;About IPC: the Trusty APIs use&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;n&quot;&gt;send_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;get_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;read_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;put_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;to send/retrieve message between CA and TA, the calling sequence should be correct. One lesson learn in my software bring up is that the communication was failed after executed one time successful communication. The communication was hang up after then and TA wasn’t able to get the message from CA. The failure was due to missing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;put_msg()&lt;/code&gt; calling after executed &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;read_msg()&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handle_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tzapp_chan_ctx_t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;handle_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
&lt;span class=&quot;cm&quot;&gt;/* get message info */&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ipc_msg_info_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg_inf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg_buf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg_inf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ERR_NO_MSG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NO_ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* no new messages */&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;// fatal error&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NO_ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LOGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Trusty: failed (%ld) to get_msg for chan (%d), closing connection&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;//MessageDeleter md(chan, msg_inf.id);&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;// allocate msg_buf, with one extra byte for null-terminator&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;msg_buf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;malloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg_inf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LOGD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Trusty: handle_msg msg_inf.len = %d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg_inf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg_buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LOGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Trusty: msg_buf failed to malloc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ERR_NO_MEMORY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;cm&quot;&gt;/* read msg content */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iovec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iov&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg_buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg_inf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ipc_msg_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iov&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
 
&lt;span class=&quot;n&quot;&gt;memset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg_buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg_inf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg_inf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rc_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;put_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg_inf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// change to put_msg more early&lt;/span&gt;
 
&lt;span class=&quot;c1&quot;&gt;// fatal error&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LOGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Trusty: failed to read msg (%ld)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg_inf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LOGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Trusty: invalid message of size (%ld)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ERR_NOT_VALID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rc_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NO_ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LOGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Trusty: failed (%d) to put_msg for chan (%d)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rc_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;kt&quot;&gt;int32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg_buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rsp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg_inf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 
&lt;span class=&quot;n&quot;&gt;rc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;send_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg_inf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;out:&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg_buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;free&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg_buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;4-spi-&quot;&gt;&lt;span id=&quot;4&quot;&gt;4. SPI &lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;It is related to hardware platform, on Spreadtrum SC9863, it doesn’t need to configure SPI and will only use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ioctl()&lt;/code&gt; for transmission.&lt;/p&gt;

&lt;h2 id=&quot;5-others&quot;&gt;&lt;span id=&quot;5&quot;&gt;5. Others&lt;/span&gt;&lt;/h2&gt;

&lt;h3 id=&quot;51-how-to-build-&quot;&gt;&lt;span id=&quot;5.1&quot;&gt;5.1 How to build ?&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span id=&quot;5.1.1&quot;&gt;&lt;strong&gt;5.1.1 Toolchain&lt;/strong&gt;&lt;/span&gt; &lt;br /&gt;
It is recommended to use the arm-eabi-4.8 tool chain of Android code package:&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:&amp;lt;AOSP&amp;gt;/prebuilts/gcc/linux-x86/arm/arm-eabi-4.8/bin&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;span id=&quot;5.1.2&quot;&gt;&lt;strong&gt;5.1.2 Build&lt;/strong&gt;&lt;/span&gt;  &lt;br /&gt;
put the TA code fpctzapp into SDK app/demo/ folder.&lt;br /&gt;
run command &lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;n&quot;&gt;make&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;app/demo/fpctzapp:TA&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;span id=&quot;5.1.3&quot;&gt;&lt;strong&gt;5.1.3 Output Image&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;
output two image files fpctzapp.elf and fpctzapp.syms.elf (which contains symbol table for debug purpose)&lt;/p&gt;

&lt;h3 id=&quot;52-tools-&quot;&gt;&lt;span id=&quot;5.2&quot;&gt;5.2 Tools &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span id=&quot;5.2.1&quot;&gt;&lt;strong&gt;5.2.1 uuidgen&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;
Output two image files &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fpctzapp.elf&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fpctzapp.syms.elf&lt;/code&gt; (which contains symbol table for debug purpose)&lt;br /&gt;
&lt;span id=&quot;5.2.2&quot;&gt;&lt;strong&gt;5.2.2 addr2line&lt;/strong&gt;&lt;/span&gt; &lt;br /&gt;
To find the line number of error occurrence from symbol table. In the&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;bsp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toolchain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prebuilts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gcc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linux&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eabi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;4.8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folder&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;span id=&quot;5.2.3&quot;&gt;&lt;strong&gt;5.2.3 signta.py&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;
Signature tool for signing the TA image. In the&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;vendor/sprd/proprietories-source/packimage_scripts/signimage/dynamicTA/&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;python signta.py &lt;span class=&quot;nt&quot;&gt;--uuid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;UUID&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--key&lt;/span&gt; “privatekey.pem” &lt;span class=&quot;nt&quot;&gt;--in&lt;/span&gt; “TA image name without signed” &lt;span class=&quot;nt&quot;&gt;--out&lt;/span&gt; “signed TA image name”.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;command for signature.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;python signta.py &lt;span class=&quot;nt&quot;&gt;--uuid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;UUID&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--key&lt;/span&gt; “privatekey.pem” &lt;span class=&quot;nt&quot;&gt;--in&lt;/span&gt; “TA image name without signed” &lt;span class=&quot;nt&quot;&gt;--out&lt;/span&gt; “signed TA image name”&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;53-logs-&quot;&gt;&lt;span id=&quot;5.3&quot;&gt;5.3 Logs &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span id=&quot;5.3.1&quot;&gt;&lt;strong&gt;5.3.1 TA load successfully&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;68.183207&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c4&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;246&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;trusty: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ta_manager_wait_load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;382&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ta_manager_wait_load&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;trusty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fpctzapp&lt;/span&gt; 
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;68.185949&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c4&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;246&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;trusty: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ta_manager_write_ta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;485&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;ta_manager_write_ta: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ta!&lt;/span&gt; 
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;68.188528&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;181&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;trusty: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ta_manager_write_ta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;573&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ta_manager_write_ta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;trusty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fpctzapp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accomplished!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;span id=&quot;5.3.2&quot;&gt;&lt;strong&gt;5.3.2 Failure with TA wasn’t signed or signatue wasn’t match&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;30.866766&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;trusty: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ta_manager_write_ta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;538&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;ta_manager_write_ta: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ta!&lt;/span&gt; 
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;30.999062&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c0&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;trusty: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ta_manager_handle_msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;760&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ta_manager_handle_request&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;failed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;span id=&quot;5.3.3&quot;&gt;&lt;strong&gt;5.3.3 TA APP wasn’t running properly, CA lost communication&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt; libtrusty: tipc_connect: can&lt;span class=&quot;s1&quot;&gt;'t connect to tipc service &quot;com.android.trusty.fpctzapp&quot; (err=107)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>david.dong</name></author><category term="Android" /><category term="Fingerprint" /><category term="Android" /><category term="Fingerprint" /><summary type="html">I have completed a Android platform fingerprint application on Trusty TEE recently for my work. This page will try to give some useful information, which is a summary of my work and might be helpful for somebody who want to bring up fingerprint application on Trusty TEE.</summary></entry><entry><title type="html">利用Microsoft WDK工具生成数字签名</title><link href="http://localhost:4000/daviddong.github.io/security/windows/2020/07/23/Security-signature-02.html" rel="alternate" type="text/html" title="利用Microsoft WDK工具生成数字签名" /><published>2020-07-23T18:24:12+08:00</published><updated>2020-07-23T18:24:12+08:00</updated><id>http://localhost:4000/daviddong.github.io/security/windows/2020/07/23/Security-signature-02</id><content type="html" xml:base="http://localhost:4000/daviddong.github.io/security/windows/2020/07/23/Security-signature-02.html">&lt;p&gt;看过我这一篇文章 &lt;a href=&quot;/daviddong.github.io/others/2020/07/06/Others-signature.html&quot;&gt;「浅谈数字签名」&lt;/a&gt; 的读者应该记得，在这篇文章的末尾遗留了一个问题 — &lt;strong&gt;在windows平台下如何利用Microsoft提供的工具来生成数字签名&lt;/strong&gt;。我在这篇文章中会对这个问题做一个说明，并引用一个例子来介绍签名的过程。&lt;/p&gt;

&lt;h2 id=&quot;1-相关工具&quot;&gt;&lt;span id=&quot;5&quot;&gt;1. 相关工具&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;这里我先把和签名相关的工具罗列出来。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;工具&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;makecert.exe&lt;/td&gt;
      &lt;td&gt;使用这个工具来生成测试用的证书&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cert2spc.exe&lt;/td&gt;
      &lt;td&gt;使用 cert2spc.exe 将公钥证书转换为软件发布者证书，即spc文件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;pvk2pfx.exe&lt;/td&gt;
      &lt;td&gt;使用 pvk2pfx.exe 将公钥证书和私钥证书合并成一个PFX格式的证书文件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;inf2cat.exe&lt;/td&gt;
      &lt;td&gt;驱动开发会用到，该工具确定驱动程序包的 INF 文件是否可以针对指定的 Windows 版本列表进行数字签名。如果可以，那么 Inf2Cat.exe 会生成适用于指定 Windows 版本的未签名的目录文件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;signtool.exe&lt;/td&gt;
      &lt;td&gt;数字签名制作工具,制作数字签名和验证&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;2-制作流程&quot;&gt;&lt;span id=&quot;6&quot;&gt;2. 制作流程&lt;/span&gt;&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;使用 Inf2Cat.exe 将INF转成CAT 目录文件（针对驱动开发，非驱动程序可跳过这步）&lt;/li&gt;
  &lt;li&gt;使用 makecert.exe 制作自己的根证书&lt;/li&gt;
  &lt;li&gt;使用 cert2spc.exe 将公钥证书转换为软件发布者证书，即spc文件&lt;/li&gt;
  &lt;li&gt;使用 pvk2pfx.exe 将公钥证书和私钥证书合并成一个PFX格式的证书文件&lt;/li&gt;
  &lt;li&gt;使用 signtool.exe 签名&lt;/li&gt;
  &lt;li&gt;使用 signtool.exe 验证签名&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-举例&quot;&gt;&lt;span id=&quot;7&quot;&gt;3. 举例&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;下面我就以一个例子来演示一下整个过程。&lt;/p&gt;

&lt;h3 id=&quot;31-生成目录文件cat&quot;&gt;&lt;span id=&quot;8&quot;&gt;3.1 生成目录文件（*.cat）&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;利用 Inf2Cat.exe 将INF 转换为 CAT 目录文件这部分内容，我在这一篇文章 &lt;a href=&quot;/daviddong.github.io/others/2020/07/09/Others-inf2cat.html&quot;&gt;Inf2Cat 工具使用&lt;/a&gt; 中已经做过介绍。这里不在进行说明。&lt;/p&gt;

&lt;h3 id=&quot;32-生成数字证书&quot;&gt;&lt;span id=&quot;9&quot;&gt;3.2 生成数字证书&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;makecert.exe 是一种证书创建工具，生成仅用于测试目的的 &lt;a href=&quot;/daviddong.github.io/others/2020/07/06/Others-signature.html#11&quot;&gt;X.509&lt;/a&gt; 证书。此工具将密钥对与指定发行者的名称相关联，并创建一个 X.509 证书，该证书将用户指定的名称绑定到密钥对的公共部分。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;makecert.exe 的存放路径&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Program&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Files&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Windows&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Kits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;17763.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果没有设置该路径的环境变量的话，使用时要先切换到该路径下。或者直接使用Visual Studio 的 &lt;a href=&quot;https://docs.microsoft.com/zh-cn/dotnet/framework/tools/developer-command-prompt-for-vs&quot;&gt;开发人员命令提示&lt;/a&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Developer Command Prompt&lt;/code&gt; 执行命令。&lt;/p&gt;

&lt;p&gt;关于 makecert.exe 的命令格式和参数，请见附录 &lt;a href=&quot;#1&quot;&gt;「makecert.exe 命令格式」&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;执行下列命令创建一个创建自签署证书 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RootDavid&lt;/code&gt;。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;makecert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;CN=RootDavid&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sv&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testsk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pvk&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testpk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cer&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;运行这个命令后，会弹出提示框，首先给 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;testsk.pvk&lt;/code&gt; 文件设置私钥保护口令。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-01.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后，再次输入这个口令用私钥(testsk.pvk文件中）来给公钥（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;testpk.cer&lt;/code&gt;文件中）签名（自签名）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-02.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;输入正确的私钥口令后，控制台会返回 Succeeded. 并在当前目录下生成两个文件&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-04.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其中&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;私钥证书 - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;testsk.pvk&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;公钥证书 - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;testpk.cer&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果你需要用这个根证书签发其他子证书的话，可以运行如下命令签发。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;makecert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;CN=SubCertDavid&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iv&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testsk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pvk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ic&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testpk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sv&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subsk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pvk&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subpk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cer&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;33-将公钥证书格式转换成spc软件发布者证书&quot;&gt;&lt;span id=&quot;10&quot;&gt;3.3 将公钥证书格式转换成SPC（软件发布者证书）&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;使用 cert2spc.exe 这个工具将刚才生成的公钥证书（testpk.cer）转换为 SPC 文件。  &lt;br /&gt;
&lt;strong&gt;cert2spc.exe 的存放路径&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Program&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Files&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Windows&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Kits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;17763.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;关于 cert2spc.exe 的用法，请见附录 &lt;a href=&quot;#2&quot;&gt;「cert2spc.exe 命令格式」&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;运行如下命令&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Program&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Files&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Windows&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Kits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;17763.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cert2spc&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testpk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testpk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;spc&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;执行成功后在当前目录下生成&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-06.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;34-将公钥证书和私钥合并成一个pfx格式的证书文件&quot;&gt;&lt;span id=&quot;11&quot;&gt;3.4 将公钥证书和私钥合并成一个PFX格式的证书文件&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;使用 pvk2pfx .exe 这个工具将公钥证书（testpk.spc）和私钥证书(testsk.pvk)合并成一个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PFX&lt;/code&gt;格式的证书文件。    &lt;br /&gt;
&lt;strong&gt;pvk2pfx.exe 的存放路径&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Program&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Files&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Windows&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Kits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;17763.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;关于 pvk2pfx.exe 的用法，请见附录 &lt;a href=&quot;#3&quot;&gt;「pvk2pfx.exe 命令格式」&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;执行如下命令&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Program&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Files&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Windows&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Kits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;17763.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pvk2pfx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pvk&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testsk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pvk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spc&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testpk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;spc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pfx&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testpfx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pfx&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;合并时会要求输入私钥testsk.pvk的保护口令来合并.pvk和.spc文件。输入之前设定的口令，就可在当前目录下得到生成的pfx文件。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-08.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;35-生成签名&quot;&gt;&lt;span id=&quot;12&quot;&gt;3.5 生成签名&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;使用signtool命令签名。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;signtool.exe 的存放路径&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Program&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Files&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Windows&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Kits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;17763.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;关于signtool的用法，请见附录 &lt;a href=&quot;#4&quot;&gt;「signtool.exe 命令格式」&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;执行下列命令。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;signtool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sign&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/v /&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testpfx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pfx&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/tr http:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;digicert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MXT_ENC2Array_Converter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exe&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;如果成功，会返回&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-10.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这时签名已经成功了。我们打开被签名的应用程序的属性标签，找到数字签名那一栏，可以看到签名的信息。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-11.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点开 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;详细信息&lt;/code&gt;-&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;高级&lt;/code&gt;，可以看详细的签名信息。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-12.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;X.509 格式证书信息。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-13.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;证书颁发路径为根证书。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-14.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们看到当前的证书是不授信的，需要将其添加导入证书库中。 &lt;br /&gt;
Microsoft规定应使用证书存储区来安全地存储证书（证书存储区是系统中一个特殊区域，专门用来保存X.509数字证书）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-15.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Windows 预设了以下存储区：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;存储区&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;AddressBook&lt;/td&gt;
      &lt;td&gt;其他用户的 X.509 证书存储区。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;AuthRoot&lt;/td&gt;
      &lt;td&gt;第三方证书颁发机构 (CA) 的 X.509 证书存储区。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CertificateAuthority&lt;/td&gt;
      &lt;td&gt;中间证书颁发机构 (CA) 的 X.509 证书存储区。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Disallowed&lt;/td&gt;
      &lt;td&gt;吊销的证书的 X.509 证书存储区。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;My&lt;/td&gt;
      &lt;td&gt;个人证书的 X.509 证书存储区。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Root&lt;/td&gt;
      &lt;td&gt;受信任的根证书颁发机构 (CA) 的 X.509 证书存储区。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TrustedPeople&lt;/td&gt;
      &lt;td&gt;直接受信任的人和资源的 X.509 证书存储区。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TrustedPublisher&lt;/td&gt;
      &lt;td&gt;直接受信任的发行者的 X.509 证书存储区。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;下面我们就将证书添加到存储区，选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;安装证书&lt;/code&gt;，然后一路 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Next&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-16.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;直到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;证书存储&lt;/code&gt; 步骤，选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;将所有的证书放入下列存储&lt;/code&gt;：点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;浏览&lt;/code&gt;，在弹出的对话框中选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;个人&lt;/code&gt;-&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;确定&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-17.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;为什么要选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;个人&lt;/code&gt; 呢？可以参见 signtool 的 &lt;a href=&quot;#sign&quot;&gt;sign 子命令的/s&lt;/a&gt; 选项的说明：「指定要在搜索证书时打开的存储区。 如果未指定该选项，则打开&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;My&lt;/code&gt;存储」这里的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;My&lt;/code&gt; 就是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;个人&lt;/code&gt;。然后就可以一路 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;下一步&lt;/code&gt; 到导入完成了。我们可以到计算机的管理控制台确认。在开始菜单中搜索并运行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mmc&lt;/code&gt;。在mmc界面中，选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;文件&lt;/code&gt;-&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;添加删除管理单元&lt;/code&gt;。在弹出的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;添加删除管理单元&lt;/code&gt; 对话框中，在左边的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;可用的管理单元&lt;/code&gt; 中选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;证书&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-18.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击中间的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;添加&lt;/code&gt; 按钮，在弹出的对话框中选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;我的用户帐户&lt;/code&gt; 或 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;计算机用户帐户&lt;/code&gt;，再点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;完成&lt;/code&gt;：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-19.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;就将 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;证书&lt;/code&gt; 节点添加到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;所选管理节点&lt;/code&gt; 中了：&lt;/p&gt;

&lt;p&gt;点击 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;确定&lt;/code&gt;，回到管理控制台主界面中，在左边的树控件中展开 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;证书&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;当前用户&lt;/code&gt;-&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;个人&lt;/code&gt;，选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;证书&lt;/code&gt; 节点，就可以看见已经导入的RootDavid证书。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-20.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt; 
双击RootDavid，可以看见证书对话框里写着“您有一个与该证书对应的私钥”。对话框里还写着“此CA根目录证书不受信任。要启用信任，请将该证书安装到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;受信任的根证书颁发机构&lt;/code&gt; 存储区”。后面会讲到这一点。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-21.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;36-验证签名&quot;&gt;&lt;span id=&quot;15&quot;&gt;3.6 验证签名&lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;接下来就是要验证exe的签名。&lt;/p&gt;

&lt;p&gt;执行下列命令&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;signtool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verify&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/pa MXT_ENC2Array_Converter.exe&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;此时返回了如下的结果，显示&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-22.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这是因为目前还没有将RootDavid的公钥证书添加到之前提到的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;受信任的根证书颁发机构&lt;/code&gt;。要做这一步的话，需要找到公钥证书 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;testpk.cer&lt;/code&gt;，然后双击该cer文件，在弹出的证书对话框中选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;安装证书&lt;/code&gt;。接下来和之前的导入证书操作一样，只是在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;证书存储&lt;/code&gt; 这一步，需要选择将证书存储在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;受信任的根证书颁发机构&lt;/code&gt; 存储区，而不是之前的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;个人&lt;/code&gt; 存储区中。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-23.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;
此时会弹出一个警告提示，让你确认是否要安装此证书到授信存储区，点击确认后，成功安装。回到管理控制台主界面中，在左边的树控件中展开 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;证书&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;当前用户&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;受信任的根证书颁发机构&lt;/code&gt;，选择 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;证书&lt;/code&gt; 节点，就可以看见已经导入的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;testpk.cer&lt;/code&gt; 公钥证书。 &lt;br /&gt;
此时在进行验证，验证成功！:100:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-24.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此时再打开被签名的应用程序属性页，可以看到签名已经是授信的了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-25.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;4-常见问题&quot;&gt;&lt;span id=&quot;13&quot;&gt;4. 常见问题&lt;/span&gt;&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;执行 makecert.exe 时出现如下错误&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;s1&quot;&gt;'makecert'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recognized&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;internal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;external&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;operable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;program&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;原因：这是因为没有在 makecert.exe 的路径下执行该命令，解决方法时切换到工具所在的目录下执行。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Program&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Files&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Windows&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Kits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;17763.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;或者直接使用Visual Studio 的 &lt;a href=&quot;https://docs.microsoft.com/zh-cn/dotnet/framework/tools/developer-command-prompt-for-vs&quot;&gt;开发人员命令提示&lt;/a&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Developer Command Prompt&lt;/code&gt; 运行命令。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;我在执行 makecert.exe 时失败，返回如下提示&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;already&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'testsk.pvk'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Can&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'t create the key of the subject ('&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testsk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pvk&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Failed&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;原因：这是因为没有在管理员权限下执行 makecert.exe 命令，解决方法是用管理员权限打开 CMD，运行命令。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;我的需要签名的文件名里有空格，执行签名的操作后失败。&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;signtool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sign&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/v /&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testpfx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pfx&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/tr http:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;wosign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rfc3161&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exe&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;原因：文件名不能包含空格，重命名后再次签名可以成功。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;signtool verify&lt;/code&gt; 时提示
&lt;img src=&quot;/daviddong.github.io/assets/image/others-make-sign-26.png&quot; alt=&quot;makecert01&quot; class=&quot;center-image&quot; /&gt;
原因：这是因为公钥文件xx.cer没有被添加到受信任的根证书颁发机构。解决方法 &lt;a href=&quot;#15&quot;&gt;如上&lt;/a&gt;。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;5-附录&quot;&gt;&lt;span id=&quot;14&quot;&gt;5. 附录&lt;/span&gt;&lt;/h2&gt;
&lt;h3 id=&quot;51-makecertexe-&quot;&gt;&lt;span id=&quot;1&quot;&gt;5.1 makecert.exe &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;makecert.exe 命令格式&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;MakeCert&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/b DateStart] [/e&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DateEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/len KeyLength] [/m&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nMonths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/n &quot;Name&quot;] [/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/r] [/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SubjectCertFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/sk SubjectKey] [/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SubjectCertStoreLocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ss SubjectCertStoreName] [/s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SubjectKeyFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;OutputFile&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;span id=&quot;5.1.1&quot;&gt;&lt;strong&gt;5.1.1 基本选项&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;选项&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-n&lt;/code&gt; x.509name&lt;/td&gt;
      &lt;td&gt;指定主题的证书名称。在双引号中指定此名称，并加上前缀 CN=；例如，”CN=myName”。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-pe&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;将所生成的私钥标记为可导出。这样可将私钥包括在证书中。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sk&lt;/code&gt; keyname&lt;/td&gt;
      &lt;td&gt;指定主题的密钥容器位置，该位置包含私钥。如果密钥容器不存在，系统将创建一个。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sr&lt;/code&gt; location&lt;/td&gt;
      &lt;td&gt;指定主题的证书存储位置。Location 可以是 currentuser（默认值）或 localmachine。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-ss&lt;/code&gt; store&lt;/td&gt;
      &lt;td&gt;指定主题的证书存储名称，输出证书即存储在那里。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-#&lt;/code&gt; number&lt;/td&gt;
      &lt;td&gt;指定一个介于 1 和 2,147,483,647 之间的序列号。默认值是由 Makecert.exe 生成的唯一值。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-$&lt;/code&gt; authority&lt;/td&gt;
      &lt;td&gt;指定证书的签名权限，必须设置为 commercial（对于商业软件发行者使用的证书）或 individual（对于个人软件发行者使用的证书）。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;span id=&quot;5.1.1&quot;&gt;&lt;strong&gt;5.1.2 扩展选项&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;选项&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-a&lt;/code&gt; algorithm&lt;/td&gt;
      &lt;td&gt;指定签名算法。必须是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;md5&lt;/code&gt;（默认值）或 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sha1&lt;/code&gt;。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-b&lt;/code&gt; mm/dd/yyyy&lt;/td&gt;
      &lt;td&gt;指定有效期的开始时间。默认为证书的创建日期。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-e&lt;/code&gt; mm/dd/yyyy&lt;/td&gt;
      &lt;td&gt;指定有效期的结束时间。默认为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;12/31/2039 11:59:59 GMT&lt;/code&gt;。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-m&lt;/code&gt; number&lt;/td&gt;
      &lt;td&gt;以月为单位指定证书有效期的持续时间。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-cy&lt;/code&gt; certType&lt;/td&gt;
      &lt;td&gt;指定证书类型。有效值是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;end&lt;/code&gt;（对于最终实体）和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;authority&lt;/code&gt;（对于证书颁发机构）。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-d&lt;/code&gt; name&lt;/td&gt;
      &lt;td&gt;显示主题的名称&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-eku&lt;/code&gt; oid[,oid]&lt;/td&gt;
      &lt;td&gt;将用逗号分隔的增强型密钥用法对象标识符 (OID) 列表插入到证书中。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-h&lt;/code&gt; number&lt;/td&gt;
      &lt;td&gt;指定此证书下面的树的最大高度。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-ic&lt;/code&gt; file&lt;/td&gt;
      &lt;td&gt;指定颁发者的证书文件。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-ik&lt;/code&gt; keyName&lt;/td&gt;
      &lt;td&gt;指定颁发者的密钥容器名称。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-iky&lt;/code&gt; keytype&lt;/td&gt;
      &lt;td&gt;指定颁发者的密钥类型，必须是 exchange、signature 或一个表示提供程序类型的整数。默认情况下，可传入 1 表示交换密钥，传入 2 表示签名密钥。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-in&lt;/code&gt; name&lt;/td&gt;
      &lt;td&gt;指定颁发者的证书公用名称。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-ip&lt;/code&gt; provider&lt;/td&gt;
      &lt;td&gt;指定颁发者的 CryptoAPI 提供程序名称。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-ir&lt;/code&gt; location&lt;/td&gt;
      &lt;td&gt;指定颁发者的证书存储位置。Location 可以是 currentuser（默认值）或 localmachine。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-is&lt;/code&gt; store&lt;/td&gt;
      &lt;td&gt;指定颁发者的证书存储名称。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-iv&lt;/code&gt; pvkFile&lt;/td&gt;
      &lt;td&gt;指定颁发者的 .pvk 私钥文件。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-iy&lt;/code&gt; pvkFile&lt;/td&gt;
      &lt;td&gt;指定颁发者的 CryptoAPI 提供程序类型。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-l&lt;/code&gt; link&lt;/td&gt;
      &lt;td&gt;到策略信息的链接（例如，一个 URL）。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-r&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;创建自签署证书。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sc&lt;/code&gt; file&lt;/td&gt;
      &lt;td&gt;指定主题的证书文件。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sky&lt;/code&gt; keytype&lt;/td&gt;
      &lt;td&gt;指定主题的密钥类型，必须是exchange、 signature或一个表示提供程序类型的整数。默认情况下，可传入 1 表示交换密钥，传入 2 表示签名密钥。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sp&lt;/code&gt; provider&lt;/td&gt;
      &lt;td&gt;指定主题的 CryptoAPI 提供程序名称。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sv&lt;/code&gt; pvkFile&lt;/td&gt;
      &lt;td&gt;指定主题的 .pvk 私钥文件。如果该文件不存在，系统将创建一个。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sy&lt;/code&gt; type&lt;/td&gt;
      &lt;td&gt;指定主题的 CryptoAPI 提供程序类型。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;52-cert2spcexe-&quot;&gt;&lt;span id=&quot;2&quot;&gt;5.2 cert2spc.exe &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;软件发行者证书测试工具 cert2spc.exe 从一个或多个X.509证书创建软件发行者证书（SPC）。cert2spc.exe 仅用于测试目的。商业目的的SPC可以从证书颁发机构（如VeriSign或Thawte）获取。&lt;/p&gt;

&lt;p&gt;&lt;span id=&quot;5.2.1&quot;&gt;&lt;strong&gt;5.2.1 语法格式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;cert2spc&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cert1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crl1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;crl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;certN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crlN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;crl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outputSPCfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;spc&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;span id=&quot;5.2.2&quot;&gt;&lt;strong&gt;5.2.2 参数&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;参数&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;certN.cer&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;要包含在 SPC 文件中的 X.509 证书的名称。 可以指定用空格分隔的多个名称。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;crlN.crl&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;要包含在 SPC 文件中的证书吊销列表的名称。 可以指定用空格分隔的多个名称。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;outputSPCfile.spc&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;将包含 X.509 证书的 PKCS #7 对象的名称。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;span id=&quot;5.2.3&quot;&gt;&lt;strong&gt;5.2.3 选项&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;选项&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;/?&lt;/td&gt;
      &lt;td&gt;显示该工具的命令语法和选项。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;53-pvk2pfxexe-&quot;&gt;&lt;span id=&quot;3&quot;&gt;5.3 pvk2pfx.exe &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Pvk2Pfx.exe 是一个命令行工具，它将.spc、.cer和.pvk文件中包含的公钥和私钥信息复制到个人信息交换（.pfx）文件中。
命令格式&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;pvk2pfx&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/pvk pvkfilename.pvk [/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pvkpassword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spc&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spcfilename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/pfx pfxfilename.pfx [/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;po&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pfxpassword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/f]]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;span id=&quot;5.3.1&quot;&gt;&lt;strong&gt;5.3.1 参数&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;参数&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/pvk&lt;/code&gt; pvkfilename.pvk&lt;/td&gt;
      &lt;td&gt;指定一个.pvk 文件的名称。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/spc&lt;/code&gt; spcfilename.ext&lt;/td&gt;
      &lt;td&gt;指定的名称和扩展名软件发布者证书 (SPC)包含证书的文件。 该文件可以是.spc 文件或 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.cer&lt;/code&gt; 文件。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/pfx&lt;/code&gt; pfxfilename.pfx&lt;/td&gt;
      &lt;td&gt;指定.pfx 文件的名称。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/pi&lt;/code&gt; pvkpassword&lt;/td&gt;
      &lt;td&gt;指定.pvk 文件的密码。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/po&lt;/code&gt; pfxpassword&lt;/td&gt;
      &lt;td&gt;指定.pfx 文件的密码。 如果未指定.pfx 文件的密码，.pfx 文件的密码将作为.pvk 文件的密码相同。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/f&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;配置 Pvk2Pfx 覆盖.pfx 文件，如果存在与指定的同名 -pfx切换。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;若要使用 SignTool 工具来签署驱动程序符合的方式使用 SPC内核模式代码签署策略，必须将 SPC 信息添加到对进行签名的驱动程序在本地计算机上个人证书存储。有关如何将 SPC 信息添加到个人证书存储区的信息，请参阅&lt;a href=&quot;https://docs.microsoft.com/zh-cn/windows-hardware/drivers/install/software-publisher-certificate&quot;&gt;「Microsoft Docs - 软件发布者证书」&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;54-signtoolexe-&quot;&gt;&lt;span id=&quot;4&quot;&gt;5.4 signtool.exe &lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;签名工具是一个命令行工具，用于对文件进行数字签名，以及验证文件和时间戳文件中的签名。&lt;/p&gt;

&lt;p&gt;&lt;span id=&quot;5.4.1&quot;&gt;&lt;strong&gt;5.4.1 语法格式&lt;/strong&gt;&lt;/span&gt; &lt;br /&gt;
在命令提示符处，键入以下内容：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;signtool&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;span id=&quot;5.4.2&quot;&gt;&lt;strong&gt;5.4.2 参数&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;参数&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;command&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;指定要对文件执行的操作的四个命令（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;catdb&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sign&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Timestamp&lt;/code&gt; 或 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Verify&lt;/code&gt;）之一。 有关每个命令的说明，请参见下一个表。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;options&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;用于修改命令的选项。 除全局 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/q&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/v&lt;/code&gt; 选项之外，每个命令均支持一组唯一选项。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file_name&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;要进行签名的文件的路径。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;签名工具支持下列命令。 每个命令均与不同的选项集结合使用，这些选项集已在其各自的节中列出。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;命令&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;catdb&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;在目录数据库中添加或移除目录文件。 目录数据库用于自动查找目录文件，并由 GUID 标识。 有关 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;catdb&lt;/code&gt; 命令支持的选项列表，请参阅 &lt;a href=&quot;#catdb&quot;&gt;catdb 命令选项&lt;/a&gt;。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sign&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;对文件进行数字签名。 数字签名可以阻止文件被篡改，并且使用户能够基于签名证书验证签名者。 有关 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sign&lt;/code&gt; 命令支持的选项列表，请参阅 &lt;a href=&quot;#sign&quot;&gt;sign 命令选项&lt;/a&gt;。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Timestamp&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;为文件添加时间戳。 有关 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TimeStamp&lt;/code&gt; 命令支持的选项列表，请参阅 &lt;a href=&quot;#TimeStamp&quot;&gt;TimeStamp 命令选项&lt;/a&gt;。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Verify&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;通过确定签名证书是否由受信任的颁发机构颁发、是否已撤消签名证书，以及签名证书对于特定策略是否有效（可选）来验证文件的数字签名。 有关 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Verify&lt;/code&gt; 命令支持的选项列表，请参阅 &lt;a href=&quot;#Verify&quot;&gt;Verify 命令选项&lt;/a&gt;。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;下列选项适用于所有签名工具命令。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;全局选项&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;/q&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;如果命令运行成功，则不显示输出；如果命令运行失败，则显示最小输出。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;/v&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;无论命令是否运行成功，都显示详细输出，并显示警告消息。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;/debug&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;显示调试信息。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a name=&quot;catdb&quot;&gt;&lt;/a&gt;
&lt;span id=&quot;5.4.3&quot;&gt;&lt;strong&gt;5.4.3 catdb 命令选项&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;
 下表列出了可与 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;catdb&lt;/code&gt; 命令一起使用的选项。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Catdb 选项&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/d&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;指定更新默认目录数据库。 如果 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/d&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/g&lt;/code&gt; 选项都未使用，则签名工具会更新系统组件和驱动程序数据库。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/g&lt;/code&gt; GUID&lt;/td&gt;
      &lt;td&gt;指定由全局唯一标识符 GUID 标识的目录数据库已更新。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/r&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;从目录数据库中移除指定的目录。 如果未指定该选项，签名工具将向目录数据库添加指定目录。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/u&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;指定自动为添加的目录文件生成唯一名称。 如有必要，重命名目录文件以阻止与现有目录文件发生名称冲突。 如果未指定该选项，签名工具将覆盖与所添加的目录同名的任何现有目录。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a name=&quot;sign&quot;&gt;&lt;/a&gt;
&lt;span id=&quot;5.4.4&quot;&gt;&lt;strong&gt;5.4.4 sign 命令选项&lt;/strong&gt;&lt;/span&gt;&lt;br /&gt;
 下表列出了可与 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sign&lt;/code&gt; 命令一起使用的选项。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Sign 命令选项&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/a&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;自动选择最佳签名证书。 签名工具将查找满足所有指定条件的所有有效证书，并选择有效时间最长的证书。 如果未提供该选项，签名工具仅查找一个有效的签名证书。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/ac&lt;/code&gt;  file&lt;/td&gt;
      &lt;td&gt;将 file 中的其他证书添加到签名块。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/as&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;追加此签名。 如果不存在主签名，则改为使此签名成为主签名。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/c&lt;/code&gt;  CertTemplateName&lt;/td&gt;
      &lt;td&gt;指定用于对证书进行签名的证书模板名（一个 Microsoft 扩展）。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/csp&lt;/code&gt;  CSPName&lt;/td&gt;
      &lt;td&gt;指定包含私钥容器的加密服务提供程序 (CSP)。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/d&lt;/code&gt;  Desc&lt;/td&gt;
      &lt;td&gt;指定已签名内容的说明。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/du&lt;/code&gt;  URL&lt;/td&gt;
      &lt;td&gt;为已签名内容的详细说明指定统一资源定位器 (URL)。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/f&lt;/code&gt;  SignCertFile&lt;/td&gt;
      &lt;td&gt;指定文件中的签名证书。 如果文件采用个人信息交换 (PFX) 格式且受密码保护，则使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/p&lt;/code&gt; 选项指定密码。 如果文件不包含私钥，则使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/csp&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/kc&lt;/code&gt; 选项指定 CSP 和私钥容器名。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/fd&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;指定要用于创建文件签名的文件摘要算法。 默认值为 SHA1。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/i&lt;/code&gt;  IssuerName&lt;/td&gt;
      &lt;td&gt;指定签名证书的颁发者的名称。 该值可以是整个颁发者名称的子字符串。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/kc&lt;/code&gt;  PrivKeyContainerName&lt;/td&gt;
      &lt;td&gt;指定私钥容器名。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/n&lt;/code&gt;  SubjectName&lt;/td&gt;
      &lt;td&gt;指定签名证书的主题的名称。 该值可以是整个主题名称的子字符串。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/nph&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;如果支持，则取消可执行文件的页面哈希。 默认值由 SIGNTOOL_PAGE_HASHES 环境变量和 wintrust.dll 版本决定。 对于非 PE 文件，忽略此选项。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/p&lt;/code&gt;  Password&lt;/td&gt;
      &lt;td&gt;指定打开 PFX 文件时要使用的密码。 （使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/f&lt;/code&gt; 选项指定 PFX 文件。）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/p7&lt;/code&gt; &lt;em&gt;路径&lt;/em&gt;&lt;/td&gt;
      &lt;td&gt;指定为每个指定的内容文件生成的公钥加密标准 (PKCS) #7 文件。 PKCS #7 文件命名为 path\filename.p7。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/p7ce&lt;/code&gt; Value&lt;/td&gt;
      &lt;td&gt;为已签名的 PKCS #7 内容指定选项。 将 Value 设置为“嵌入的”，可将已签名内容嵌入到 PKCS #7 文件中；如果设置为“DetachedSignedData”，则可生成分离的 PKCS #7 文件的已签名数据部分。 如果未使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/p7ce&lt;/code&gt; 选项，默认情况下将嵌入已签名的内容。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/p7co&lt;/code&gt; &amp;lt;OID&amp;gt;&lt;/td&gt;
      &lt;td&gt;指定标识已签名的 PKCS #7 内容的对象标识符 (OID)。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/ph&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;如果支持，则生成可执行文件的页面哈希。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/r&lt;/code&gt;  RootSubjectName&lt;/td&gt;
      &lt;td&gt;指定签名证书必须链接到的根证书的主题名称。 该值可以是根证书的整个主题名称的子字符串。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/s&lt;/code&gt;  StoreName&lt;/td&gt;
      &lt;td&gt;指定要在搜索证书时打开的存储。 如果未指定该选项，则打开 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;My&lt;/code&gt; 存储。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/sha1&lt;/code&gt;  Hash&lt;/td&gt;
      &lt;td&gt;指定签名证书的 SHA1 哈希。 当多个证书满足剩余开关指定的条件时，通常会指定 SHA1 哈希。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/sm&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;指定使用计算机存储，而不是用户存储。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/t&lt;/code&gt;  URL&lt;/td&gt;
      &lt;td&gt;指定时间戳服务器的 URL。 如果该选项（或 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tr&lt;/code&gt;）不存在，将不会对签名文件执行时间戳操作。 如果时间戳操作失败，将生成一个警告。 此选项不能与 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tr&lt;/code&gt; 选项一起使用。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/td&lt;/code&gt;  alg&lt;/td&gt;
      &lt;td&gt;将此选项与 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tr&lt;/code&gt; 选项一起使用可请求 RFC 3161 时间戳服务器使用的摘要算法。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tr&lt;/code&gt;  URL&lt;/td&gt;
      &lt;td&gt;指定 RFC 3161 时间戳服务器的 URL。 如果该选项（或 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/t&lt;/code&gt;）不存在，将不会对签名文件执行时间戳操作。 如果时间戳操作失败，将生成一个警告。 此选项不能与 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/t&lt;/code&gt; 选项一起使用。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/u&lt;/code&gt;  Usage&lt;/td&gt;
      &lt;td&gt;指定签名证书中必须存在的增强型密钥用法 (EKU)。 可以通过 OID 或字符串指定该用法的值。 默认用法为“代码签名”(1.3.6.1.5.5.7.3.3)。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/uw&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;指定“Windows 系统组件验证”(1.3.6.1.4.1.311.10.3.6) 的用法。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;有关用法示例，请参阅 &lt;a href=&quot;https://docs.microsoft.com/zh-cn/windows/win32/seccrypto/using-signtool-to-sign-a-file&quot;&gt;「Microsoft Docs - Using SignTool to Sign a File」&lt;/a&gt;（使用 SignTool 为文件签名）。&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;TimeStamp&quot;&gt;&lt;/a&gt;
&lt;span id=&quot;5.4.5&quot;&gt;&lt;strong&gt;5.4.5 TimeStamp 命令选项&lt;/strong&gt;&lt;/span&gt; 
 下表列出了可与 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TimeStamp&lt;/code&gt; 命令一起使用的选项。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;TimeStamp 选项&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/p7&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;对 PKCS #7 文件执行时间戳操作。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/t&lt;/code&gt;  URL&lt;/td&gt;
      &lt;td&gt;指定时间戳服务器的 URL。 要执行时间戳操作的文件必须在以前已进行签名。 需要 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/t&lt;/code&gt; 或 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tr&lt;/code&gt; 选项。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/td&lt;/code&gt;  alg&lt;/td&gt;
      &lt;td&gt;请求 RFC 3161 时间戳服务器使用的摘要算法。 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/td&lt;/code&gt; 与 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tr&lt;/code&gt; 选项一起使用。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tp&lt;/code&gt; index&lt;/td&gt;
      &lt;td&gt;对 index 处的签名进行时间戳操作。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tr&lt;/code&gt;  URL&lt;/td&gt;
      &lt;td&gt;指定 RFC 3161 时间戳服务器的 URL。 要执行时间戳操作的文件必须在以前已进行签名。 需要 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tr&lt;/code&gt; 或 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/t&lt;/code&gt; 选项。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;有关使用示例，请参阅 &lt;a href=&quot;https://docs.microsoft.com/zh-cn/windows/win32/seccrypto/adding-time-stamps-to-previously-signed-files&quot;&gt;「Microsoft Docs - Adding Time Stamps to Previously Signed Files」&lt;/a&gt;（向之前已签名的文件添加时间戳）。&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;Verify&quot;&gt;&lt;/a&gt;
&lt;span id=&quot;5.4.6&quot;&gt;&lt;strong&gt;5.4.6 Verify 命令选项&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Verify 选项&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/a&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;指定可以使用所有方法来验证文件。 首先，搜索目录数据库以确定是否在目录中对文件进行签名。 如果未在任何目录中对文件进行签名，签名工具将尝试验证文件的嵌入签名。 验证可以或不能在目录中进行签名的文件时，建议使用该选项。 这些文件的示例包括 Windows 文件或驱动程序。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/ad&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;使用默认的目录数据库查找目录。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/ag&lt;/code&gt; CatDBGUID&lt;/td&gt;
      &lt;td&gt;在由 CatDBGUID 标识的目录数据库中查找目录。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/all&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;验证包含多个签名的文件中的所有签名。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/as&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;使用系统组件（驱动程序）目录数据库查找目录。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/c&lt;/code&gt; CatFile&lt;/td&gt;
      &lt;td&gt;通过名称指定目录文件。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/d&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;指定签名工具应打印描述和描述 URL。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/ds&lt;/code&gt;  Index&lt;/td&gt;
      &lt;td&gt;验证指定位置的签名。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/hash&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHA1&lt;/code&gt;|&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHA256&lt;/code&gt;)&lt;/td&gt;
      &lt;td&gt;指定在目录中搜索文件时要使用的可选哈希算法。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/kp&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;指定应使用内核模式驱动程序签名策略执行验证。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/ms&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;使用多个验证语义。 这是 Windows 8 和更高版本上的 &lt;a href=&quot;https://docs.microsoft.com/zh-cn/windows/win32/seccrypto/using-signtool-to-verify-a-file-signature&quot;&gt;「Microsoft Docs - WinVerifyTrust」&lt;/a&gt; 调用的默认行为。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/o&lt;/code&gt; Version&lt;/td&gt;
      &lt;td&gt;按操作系统版本验证文件。 版本具有以下格式：PlatformID：VerMajor.VerMinor.BuildNumber。 PlatformID 表示 &lt;xref:System.PlatformID&gt; 枚举成员的基础值。 **重要提示：** 建议使用 `/o` 开关。 如果未指定 `/o`，SignTool.exe 可能会返回意外的结果。 例如，如果你未将 `/o` 开关包含在内，则能在旧版操作系统上正确验证的系统目录可能在新版操作系统上无法正确验证。&lt;/xref:System.PlatformID&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/p7&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;验证 PKCS #7 文件。 无现有策略用于 PKCS #7 验证。 该签名处于选中状态，并为签名证书生成了链。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/pa&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;指定应使用默认认证码验证策略。 如果未指定 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/pa&lt;/code&gt; 选项，签名工具将使用 Windows 驱动程序验证策略。 此选项不能与 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;catdb&lt;/code&gt; 选项一起使用。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/pg&lt;/code&gt; PolicyGUID&lt;/td&gt;
      &lt;td&gt;通过 GUID 指定验证策略。 PolicyGUID 相当于验证策略的 ActionID。 此选项不能与 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;catdb&lt;/code&gt; 选项一起使用。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/ph&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;指定签名工具应打印并验证页面哈希值。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/r&lt;/code&gt; RootSubjectName&lt;/td&gt;
      &lt;td&gt;指定签名证书必须链接到的根证书的主题名称。 该值可以是根证书的整个主题名称的子字符串。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tw&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;指定在未对签名进行时间戳操作时应生成警告。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;span id=&quot;5.4.7&quot;&gt;&lt;strong&gt;5.4.7 返回值&lt;/strong&gt;&lt;/span&gt;  &lt;br /&gt;
 当其终止时，签名工具将返回下列退出代码之一。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;退出代码&lt;/th&gt;
      &lt;th&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;执行成功。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;执行失败。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;执行完成，但出现警告。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;span id=&quot;5.4.8&quot;&gt;&lt;strong&gt;5.4.8 示例&lt;/strong&gt;&lt;/span&gt;   &lt;br /&gt;
 以下命令将目录文件 MyCatalogFileName.cat 添加到系统组件和驱动程序数据库中。 如有必要阻止替换名为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/u&lt;/code&gt; 的现有目录文件，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MyCatalogFileName.cat&lt;/code&gt; 选项会生成唯一名称。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;signtool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;catdb&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/v /u&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyCatalogFileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cat&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;以下命令通过使用最佳证书对文件进行自动签名。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;signtool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sign&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/a MyFile.exe  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;以下命令使用存储在受密码保护的 PFX 文件中的证书对文件进行数字签名。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;signtool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sign&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/f MyCert.pfx /&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyPassword&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exe&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;以下命令对文件进行数字签名并加盖时间戳。 用于对文件进行签名的证书存储在 PFX 文件中。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;signtool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sign&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/f MyCert.pfx /&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;digicert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exe&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;以下命令通过使用位于 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;My&lt;/code&gt; 存储中的证书对文件进行签名，该证书的主题名为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;My Company Certificate&lt;/code&gt;。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;signtool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sign&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/n &quot;My Company Certificate&quot; MyFile.exe  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;以下命令对 ActiveX 控件进行签名，并提供在系统提示用户安装此控件时由 Internet Explorer 显示的信息。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Signtool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sign&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/f MyCert.pfx /&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;d: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MyControl&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;du&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;example&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MyControl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyControl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exe&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;以下命令对已进行数字签名的文件加盖时间戳。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;signtool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timestamp&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/t http:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;digicert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;com&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exe&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;以下命令确认文件已签名。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;signtool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verify&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exe&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;以下命令验证可能已在目录中签名的系统文件。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;signtool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verify&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/a SystemFile.dll  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;以下命令验证已在名为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MyCatalog.cat&lt;/code&gt; 目录中签名的系统文件。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;signtool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verify&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/c MyCatalog.cat SystemFile.dll  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>david.dong</name></author><category term="Security" /><category term="Windows" /><category term="Security" /><category term="Windows" /><summary type="html">看过我这一篇文章 「浅谈数字签名」 的读者应该记得，在这篇文章的末尾遗留了一个问题 — 在windows平台下如何利用Microsoft提供的工具来生成数字签名。我在这篇文章中会对这个问题做一个说明，并引用一个例子来介绍签名的过程。</summary></entry><entry><title type="html">mbedtls 使用说明</title><link href="http://localhost:4000/daviddong.github.io/security/2020/07/10/Security-mbedtls.html" rel="alternate" type="text/html" title="mbedtls 使用说明" /><published>2020-07-10T10:24:12+08:00</published><updated>2020-07-10T10:24:12+08:00</updated><id>http://localhost:4000/daviddong.github.io/security/2020/07/10/Security-mbedtls</id><content type="html" xml:base="http://localhost:4000/daviddong.github.io/security/2020/07/10/Security-mbedtls.html">&lt;p&gt;最近的工作中使用到了mbedtls，这里做一个简单的总结。&lt;/p&gt;

&lt;h2 id=&quot;1-什么是-mbedtls&quot;&gt;&lt;span id=&quot;1&quot;&gt;1. 什么是 mbedtls&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;mbedtls 一句话来概况的话就是它是一个开源的SSL/TLS库。 &lt;br /&gt;
&lt;a href=&quot;https://github.com/ARMmbed/mbedtls#readme-for-mbed-tls&quot;&gt;–项目源码地址&lt;/a&gt; &lt;br /&gt;
&lt;a href=&quot;https://tls.mbed.org/api/&quot;&gt;–项目API文档&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;11-ssl&quot;&gt;&lt;span id=&quot;1.1&quot;&gt;1.1 SSL&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;关于SSL(Secure Sockets Layer 安全套接字协议)，百度百科的解释如下&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;SSL协议位于TCP/IP协议与各种应用层协议之间，为数据通讯提供安全支持。SSL协议可分为两层：&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;SSL记录协议（SSL Record Protocol）：它建立在可靠的传输协议（如TCP）之上，为高层协议提供数据封装、压缩、加密等基本功能的支持。&lt;/li&gt;
    &lt;li&gt;SSL握手协议（SSL Handshake Protocol）：它建立在SSL记录协议之上，用于在实际的数据传输开始前，通讯双方进行身份认证、协商加密算法、交换加密密钥等。&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;TLS与SSL在传输层与应用层之间对网络连接进行加密。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;12-mbedtls-特点&quot;&gt;&lt;span id=&quot;1.2&quot;&gt;1.2 mbedtls 特点&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;mbedtls 有以下的特点：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;简洁的API&lt;/li&gt;
  &lt;li&gt;开源代码库&lt;/li&gt;
  &lt;li&gt;功能模块化，松耦合。&lt;/li&gt;
  &lt;li&gt;模块可单独配置，编译&lt;/li&gt;
  &lt;li&gt;C 语言编写，针对嵌入式应用&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;从功能角度来看，mbedtls可以分为三个主要部分：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SSL/TLS 协议库（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;libmbedtls.a&lt;/code&gt;）&lt;/li&gt;
  &lt;li&gt;加密库（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;libmbedcrypto.a&lt;/code&gt;）&lt;/li&gt;
  &lt;li&gt;X.509 证书处理库（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;libmbedx509.a&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;注意：这三个库在生成的时候的依赖关系，libmbedtls.a 依赖 libmbedx509.a 而 libmbedx509.a 依赖 libmbedcrypto.a。&lt;/strong&gt; 因此在生成时要注意顺序问题。&lt;/p&gt;

&lt;h3 id=&quot;13-mbedtls-模块&quot;&gt;&lt;span id=&quot;1.3&quot;&gt;1.3 mbedtls 模块&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;mbedtls库包含以下的模块。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;模块&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Encryption/decryption module&lt;/td&gt;
      &lt;td&gt;加解密模块&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Hashing module&lt;/td&gt;
      &lt;td&gt;The Message Digest (MD)提供了hash 功能&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Random number generator (RNG) module&lt;/td&gt;
      &lt;td&gt;提供了随机数产生功能，see &lt;a href=&quot;https://tls.mbed.org/api/ctr__drbg_8h.html#af6e4dd295ae790a33128562dd01c79ab&quot;&gt;mbedtls_ctr_drbg_random()&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SSL/TLS communication module&lt;/td&gt;
      &lt;td&gt;提供了方式建立SSL/TLS通讯通道&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TCP/IP communication module&lt;/td&gt;
      &lt;td&gt;provides for a channel of communication for the SSL/TLS communication module to use&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;X.509 module&lt;/td&gt;
      &lt;td&gt;提供了X.509的支持，用于证书的读写和认证&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Asn1_module&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;2-mbedtls-安装与配置&quot;&gt;&lt;span id=&quot;2&quot;&gt;2. mbedtls 安装与配置&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;mbedtls支持3种 build 方式，&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;GNU Make&lt;/li&gt;
  &lt;li&gt;CMake&lt;/li&gt;
  &lt;li&gt;Microsoft Visual Studio (Microsoft Visual Studio 2013 or later)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;21-工具链支持&quot;&gt;&lt;span id=&quot;2.1&quot;&gt;2.1 工具链支持&lt;/span&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;GNU Make 或者 CMake build 工具.&lt;/li&gt;
  &lt;li&gt;C99 工具链 (compiler, linker, achiever). 目前支持 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GCC5.4&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Clang 3.8&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IAR8&lt;/code&gt; 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Visual Studio 2013&lt;/code&gt; 以后的版本.&lt;/li&gt;
  &lt;li&gt;Python 3 用于产生测试代码.&lt;/li&gt;
  &lt;li&gt;Perl 用于运行测试.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;22-gnu-make&quot;&gt;&lt;span id=&quot;2.2&quot;&gt;2.2 GNU Make&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;run build&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;make&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;build with test&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;make&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;build without test&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;make&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;no_test&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;23-cmake&quot;&gt;&lt;span id=&quot;2.3&quot;&gt;2.3 CMake&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;run build&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/path/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/path/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_dir&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cmake&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/path/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mbedtls_source&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cmake&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;run test&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;ctest&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;build without test&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;cmake&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DENABLE_TESTING&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Off&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/path/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mbedtls_source&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;make shared library&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;cmake&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DUSE_SHARED_MBEDTLS_LIBRARY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;On&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/path/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mbedtls_source&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;24-microsoft-visual-studio&quot;&gt;&lt;span id=&quot;2.4&quot;&gt;2.4 Microsoft Visual Studio&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;工程文件&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mbedTLS.sln&lt;/code&gt; 包含了所有必需的项目和程序. 编译该工程文件可以生成库文件。&lt;/p&gt;

&lt;p&gt;关于更多的相关信息，可以参阅 &lt;a href=&quot;https://github.com/ARMmbed/mbedtls#readme-for-mbed-tls&quot;&gt;GitHub README for Mbed TLS&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;3-mbedtls-使用&quot;&gt;&lt;span id=&quot;3&quot;&gt;3. mbedtls 使用&lt;/span&gt;&lt;/h2&gt;

&lt;p&gt;mbedtls通过提供以下功能支持&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSLv3&lt;/code&gt;到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TLSv1.2&lt;/code&gt;版本的通信：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;TCP/IP通信功能：监听、连接、接受、读/写&lt;/li&gt;
  &lt;li&gt;SSL/TLS通信功能：初始化、握手、读/写&lt;/li&gt;
  &lt;li&gt;X.509功能：CRT、CRL和按键处理&lt;/li&gt;
  &lt;li&gt;随机数生成&lt;/li&gt;
  &lt;li&gt;散列&lt;/li&gt;
  &lt;li&gt;加密/解密&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上面的功能被整齐地设计成逻辑接口。它们可以单独用于提供上述任何功能，或者混合和匹配到使用X.509 PKI的SSL服务器/客户端解决方案中。&lt;/p&gt;

&lt;h3 id=&quot;31-例子&quot;&gt;&lt;span id=&quot;3.1&quot;&gt;3.1 例子&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;服务器端的设定: &lt;br /&gt;
&lt;strong&gt;先决条件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;X.509证书和私钥&lt;/li&gt;
  &lt;li&gt;会话处理函数
&lt;strong&gt;设定步骤&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;加载证书和私钥（X.509接口）&lt;/li&gt;
  &lt;li&gt;设置侦听TCP套接字（TCP/IP接口）&lt;/li&gt;
  &lt;li&gt;接受传入客户端连接（TCP/IP接口）&lt;/li&gt;
  &lt;li&gt;初始化为SSL服务器（SSL/TLS接口）&lt;/li&gt;
  &lt;li&gt;设置参数，例如身份验证、密码、CA链、密钥交换&lt;/li&gt;
  &lt;li&gt;设置回调函数RNG、IO、会话处理&lt;/li&gt;
  &lt;li&gt;执行SSL握手（SSL/TLS接口）&lt;/li&gt;
  &lt;li&gt;读/写数据（SSL/TLS接口）&lt;/li&gt;
  &lt;li&gt;关闭和清理（所有接口）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;客户端的设定: &lt;br /&gt;
&lt;strong&gt;先决条件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;X.509证书和私钥&lt;/li&gt;
  &lt;li&gt;X.509可信CA证书
&lt;strong&gt;设定步骤&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;加载受信任的CA证书（X.509接口）&lt;/li&gt;
  &lt;li&gt;加载证书和私钥（X.509接口）&lt;/li&gt;
  &lt;li&gt;设置TCP/IP连接（TCP/IP接口）&lt;/li&gt;
  &lt;li&gt;初始化为SSL客户端（SSL/TLS接口）&lt;/li&gt;
  &lt;li&gt;设置参数，例如身份验证模式、密码、CA链、会话&lt;/li&gt;
  &lt;li&gt;设置回调函数RNG，IO&lt;/li&gt;
  &lt;li&gt;执行SSL握手（SSL/TLS接口）&lt;/li&gt;
  &lt;li&gt;验证服务器证书（SSL/TLS接口）&lt;/li&gt;
  &lt;li&gt;写入/读取数据（SSL/TLS接口）&lt;/li&gt;
  &lt;li&gt;关闭和清理（所有接口）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;32-ssltls-部分功能&quot;&gt;&lt;span id=&quot;3.2&quot;&gt;3.2 SSL/TLS 部分功能&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;mbed tls的ssl/tls部分提供了使用ssl/tls通过安全通信通道建立和通信方法。&lt;/p&gt;

&lt;p&gt;其基本规定是:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;初始化一个SSL/TLS context&lt;/li&gt;
  &lt;li&gt;执行一个SSL/TLS握手(handshake)&lt;/li&gt;
  &lt;li&gt;发送/接收数据&lt;/li&gt;
  &lt;li&gt;通知对方一个连接正在关闭&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一个通道很多方面都是通过参数和回调函数来设置的 »&amp;gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;端点角色(endpoint role),客户端和服务器&lt;/li&gt;
  &lt;li&gt;身份验证模式: 是否应该进行证书验证&lt;/li&gt;
  &lt;li&gt;主机到主机通信通道: 发送和接收功能&lt;/li&gt;
  &lt;li&gt;随机数生成器(RNG)功能&lt;/li&gt;
  &lt;li&gt;用于加密/解密的密码&lt;/li&gt;
  &lt;li&gt;证书验证功能&lt;/li&gt;
  &lt;li&gt;会话控制: 会话获取和设置功能&lt;/li&gt;
  &lt;li&gt;证书处理和密钥交换的X.509参数&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;mbed 通过创建一个SSL/TLS服务器和客户端,通过提供一个框架来建立和通过SSL/TLS通信通道进行通信.SSL/TLS部分直接依赖于库的证书解析,对称和非对称和哈希模块.&lt;/p&gt;

&lt;h3 id=&quot;33-数据结构&quot;&gt;&lt;span id=&quot;3.3&quot;&gt;3.3 数据结构&lt;/span&gt;&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot; data-lang=&quot;plaintext&quot;&gt;mbedtls_net_context：目前只有文件描述符，可以用于适配异步I/O库
mbedtls_ssl_context：保存SSL基本数据
mbedtls_ssl_config: SSL 配置数据
mbedtls_ctr_drbg_context
mbedtls_entropy_context：保存熵配置
mbedtls_x509_crt：保存认证信息&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;34-init-阶段&quot;&gt;&lt;span id=&quot;3.4&quot;&gt;3.4 Init 阶段&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;下面时init阶段需要调用的函数与传统 socket 的对比。传统的socket-based的程序，依照顺序，作为client要做以下的函数调用：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gethostbyname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;改成SSL之后，mbedTLS对应上述函数，分别对应为：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gethostbyname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;-+--&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mbedtls_net_connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mbedtls_ssl_handshake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;----&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mbedtls_ssl_write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;----&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mbedtls_ssl_read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;当然，实际情况下，会使用更多的其他函数。&lt;/p&gt;

&lt;p&gt;下面是init阶段需要调用的各函数。函数的参数，在调用的时候按照上面的函数类型一个一个传入就行了。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;mbedtls_net_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mbedtld_ssl_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mbedtld_ssl_config_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mbedtls_ctr_drbg_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mbedtld_x509_crt_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mbedtls_entropy_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mebdtls_ctr_drbg_seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;其中&lt;a href=&quot;https://tls.mbed.org/api/ctr__drbg_8h.html#af6e4dd295ae790a33128562dd01c79ab&quot;&gt;mebdtls_ctr_drbg_seed()&lt;/a&gt;可以指定熵函数。如果回调使用默认的mbedtls_entropy_func的话，可以传入一个初始的熵seed，也可以NULL。&lt;/p&gt;

&lt;h3 id=&quot;35-connect-阶段&quot;&gt;&lt;span id=&quot;3.5&quot;&gt;3.5 Connect 阶段&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://tls.mbed.org/api/ctr__drbg_8h.html#af6e4dd295ae790a33128562dd01c79ab&quot;&gt;mbedtls_net_connect()&lt;/a&gt;：参数是server和端口，均为字符串。server可以使域名或者IP字符串。最后一个参数使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MBEDTLS_NET_PROTO_TCP&lt;/code&gt;即可。端口号不仅仅可以传入数字字符串，也可以类似于get_addrinfo函数的protocol参数那样，传入类似于&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTPS&lt;/code&gt;这样的可读化字符串。&lt;/p&gt;</content><author><name>david.dong</name></author><category term="Security" /><category term="Security" /><summary type="html">最近的工作中使用到了mbedtls，这里做一个简单的总结。</summary></entry><entry><title type="html">Inf2Cat 工具</title><link href="http://localhost:4000/daviddong.github.io/windows/2020/07/09/Windows-inf2cat.html" rel="alternate" type="text/html" title="Inf2Cat 工具" /><published>2020-07-09T18:24:12+08:00</published><updated>2020-07-09T18:24:12+08:00</updated><id>http://localhost:4000/daviddong.github.io/windows/2020/07/09/Windows-inf2cat</id><content type="html" xml:base="http://localhost:4000/daviddong.github.io/windows/2020/07/09/Windows-inf2cat.html">&lt;p&gt;Windows 驱动开发中经常会用到 Windows WDK 自带的 Inf2Cat.exe 工具将驱动程序的 INF 文件转成待签名的 CAT 格式的目录文件。Windows 7 64位系统以上的版本，如果没有对cat或者sys文件进行数字签名，驱动安装会出现问题，或者驱动使用过程也会出现异常。因此，对驱动程序的签名已经是一项必须的操作，这里就介绍一下 Inf2Cat.exe 这个工具。这个工具本身并不能生成签名，但是却是驱动程序签名的必要的一步。&lt;/p&gt;

&lt;div class=&quot;separator&quot;&gt;&lt;/div&gt;
&lt;h2 class=&quot;no_toc&quot;&gt;Table of content&lt;/h2&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#inf2cat&quot; id=&quot;markdown-toc-inf2cat&quot;&gt;Inf2Cat&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#工具路径&quot; id=&quot;markdown-toc-工具路径&quot;&gt;工具路径&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#使用方法&quot; id=&quot;markdown-toc-使用方法&quot;&gt;使用方法&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#参数说明&quot; id=&quot;markdown-toc-参数说明&quot;&gt;参数说明&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#windows-版本标识符&quot; id=&quot;markdown-toc-windows-版本标识符&quot;&gt;Windows 版本标识符&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#应用示例&quot; id=&quot;markdown-toc-应用示例&quot;&gt;应用示例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;separator&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;inf2cat&quot;&gt;Inf2Cat&lt;/h2&gt;
&lt;p&gt;MSDN里对这个工具的说明如下。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Inf2Cat (Inf2Cat.exe) is a command-line tool that determines whether a driver package’s INF file can be digitally-signed for a specified list of Windows versions. If so, Inf2Cat generates the unsigned catalog files that apply to the specified Windows versions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Inf2Cat 工具检查驱动程序包的 INF 文件，了解是否存在结构错误，并且是否可以对验证驱动程序包进行数字签名。仅当 INF 文件中引用的所有文件都存在且源文件位于正确的位置时，才能对驱动程序包进行签名。&lt;/p&gt;

&lt;h3 id=&quot;工具路径&quot;&gt;工具路径&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Program&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Files&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)\&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Windows&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Kits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;使用方法&quot;&gt;使用方法&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Inf2Cat&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/driver:PackagePath /os&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:WindowsVersionList&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/nocat] [/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;verbose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/?] [other switches]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;参数说明&quot;&gt;参数说明&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;参数&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;/driver:PackagePath&lt;/td&gt;
      &lt;td&gt;指定包含驱动程序包的 INF 文件的目录路径。如果指定的目录包含多个驱动程序包的 INF 文件，那么 Inf2Cat 会为每个驱动程序包创建目录文件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/nocat&lt;/td&gt;
      &lt;td&gt;将 Inf2Cat 配置为验证驱动程序包是否符合指定的 Windows 版本的签名要求，而不生成目录文件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/os:WindowsVersionList&lt;/td&gt;
      &lt;td&gt;将 Inf2Cat 配置为验证驱动程序包的 INF 文件是否符合由 WindowsVersionList 指定的 Windows 版本的签名要求。WindowsVersionList 是一个逗号分隔列表，其中可以包含 &lt;a href=&quot;#windows version&quot;&gt;一个或多个版本标识符&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/verbose&lt;/td&gt;
      &lt;td&gt;将 Inf2Cat 配置为在命令窗口中显示详细信息&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/?&lt;/td&gt;
      &lt;td&gt;将 Inf2Cat 配置为在命令窗口中显示帮助信息&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/uselocaltime&lt;/td&gt;
      &lt;td&gt;运行驱动程序时间戳验证测试时使用本地时区&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;windows-版本标识符&quot;&gt;Windows 版本标识符&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Windows 版本&lt;/th&gt;
      &lt;th&gt;版本标识符&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 10 x86 19H1 Edition&lt;/td&gt;
      &lt;td&gt;10_19H1_X86&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 10 x64 19H1 Edition&lt;/td&gt;
      &lt;td&gt;10_19H1_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 10 ARM64 19H1 Edition&lt;/td&gt;
      &lt;td&gt;10_19H1_ARM64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 10 x86 RS5 Edition&lt;/td&gt;
      &lt;td&gt;10_RS5_X86&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 10 x64 RS5 Edition&lt;/td&gt;
      &lt;td&gt;10_RS5_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 10 ARM64 RS5 Edition&lt;/td&gt;
      &lt;td&gt;10_RS5_ARM64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows Server RS5 x64 Edition&lt;/td&gt;
      &lt;td&gt;ServerRS5_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows Server RS5 ARM64 Edition&lt;/td&gt;
      &lt;td&gt;ServerRS5_ARM64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 10 x86 RS4 Edition&lt;/td&gt;
      &lt;td&gt;10_RS4_X86&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 10 x64 RS4 Edition&lt;/td&gt;
      &lt;td&gt;10_RS4_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 10 ARM64 RS4 Edition&lt;/td&gt;
      &lt;td&gt;10_RS4_ARM64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 10 x86 RS3 Edition&lt;/td&gt;
      &lt;td&gt;10_RS3_X86&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 10 x64 RS3 Edition&lt;/td&gt;
      &lt;td&gt;10_RS3_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 10 ARM64 RS3 Edition&lt;/td&gt;
      &lt;td&gt;10_RS3_ARM64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 10 x86 RS2 Edition&lt;/td&gt;
      &lt;td&gt;10_RS2_X86&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 10 x64 RS2 Edition&lt;/td&gt;
      &lt;td&gt;10_RS2_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 10 x86 RS1 Edition&lt;/td&gt;
      &lt;td&gt;10_AU_X86&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 10 x64 RS1 Edition&lt;/td&gt;
      &lt;td&gt;10_AU_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows Server 2016 x64 Edition&lt;/td&gt;
      &lt;td&gt;SERVER2016_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 10 x86 Edition&lt;/td&gt;
      &lt;td&gt;10_X86&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 10 x64 Edition&lt;/td&gt;
      &lt;td&gt;10_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows Server 2016&lt;/td&gt;
      &lt;td&gt;Server10_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows Server 2016 on ARM&lt;/td&gt;
      &lt;td&gt;Server10_ARM64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 8.1 x86 Edition&lt;/td&gt;
      &lt;td&gt;6_3_X86&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 8.1 x64 Edition&lt;/td&gt;
      &lt;td&gt;6_3_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 8.1 ARM Edition&lt;/td&gt;
      &lt;td&gt;6_3_ARM&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows Server 2012 R2&lt;/td&gt;
      &lt;td&gt;Server6_3_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 8 x64 Edition&lt;/td&gt;
      &lt;td&gt;8_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 8 x86 Edition&lt;/td&gt;
      &lt;td&gt;8_X86&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 8 ARM Edition&lt;/td&gt;
      &lt;td&gt;8_ARM&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows Server 2012&lt;/td&gt;
      &lt;td&gt;Server8_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows Server 2008 R2 x64 Edition&lt;/td&gt;
      &lt;td&gt;Server2008R2_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows Server 2008 R2 Itanium Edition&lt;/td&gt;
      &lt;td&gt;Server2008R2_IA64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 7 x64 Edition&lt;/td&gt;
      &lt;td&gt;7_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows 7 x86 Edition&lt;/td&gt;
      &lt;td&gt;7_X86&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows Server 2008 x64 Edition&lt;/td&gt;
      &lt;td&gt;Server2008_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows Server 2008 Itanium Edition&lt;/td&gt;
      &lt;td&gt;Server2008_IA64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows Server 2008 x86 Edition&lt;/td&gt;
      &lt;td&gt;Server2008_X86&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows Vista x64 Edition&lt;/td&gt;
      &lt;td&gt;Vista_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows Vista x86 Edition&lt;/td&gt;
      &lt;td&gt;Vista_X86&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows XP x64 Edition&lt;/td&gt;
      &lt;td&gt;XP_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows XP x86 Edition&lt;/td&gt;
      &lt;td&gt;XP_X86&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows Server 2003 x64 Edition&lt;/td&gt;
      &lt;td&gt;Server2003_X64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows Server 2003 Itanium Edition&lt;/td&gt;
      &lt;td&gt;Server2003_IA64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Windows Server 2003 x86 Edition&lt;/td&gt;
      &lt;td&gt;Server2003_X86&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Inf2Cat 忽略版本标识符字符串的字母字符的大小写。例如，vista_x64 和 Vista_X64 对于 Windows Vista x64 版本来说都是有效的标识符。&lt;/p&gt;

&lt;p&gt;只有在驱动程序包的INF文件中指定了目录文件并且目录文件适用于一个或多个指定的Windows版本时，Inf2Cat才会生成目录文件。如果INF文件的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[INF Version section]&lt;/code&gt;部分只提供一个目录文件=文件名.cat指令，则该目录文件将应用于整个驱动程序包。&lt;/p&gt;

&lt;h2 id=&quot;应用示例&quot;&gt;应用示例&lt;/h2&gt;
&lt;p&gt;在以下示例中，c:\MyDriver 包含一个驱动程序包，该程序包的 INF 文件为 MyInfFile.inf 并且 INF 文件中的 INF 版本部分仅包含以下 CatalogFile 指令：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;CatalogFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MyCatalogFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cat&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;对于该示例，以下 Inf2Cat 命令将验证是否可以针对 Windows 2000 和 x86 版本的 Windows Vista、Windows Server 2003 和 Windows XP 对驱动程序包进行签名。如果可以针对这些版本对程序包进行签名，那么 Inf2Cat 将创建未签名的目录文件 MyCatalogFile.cat。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Inf2Cat&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/driver:C:\MyDriver /os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;XP_X86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Server2003_X86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Vista_X86&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在以下示例中，c:\MyDriver 包含一个驱动程序包，该程序包的 INF 文件为 MyInfFile.inf，并且 INF 文件中的 INF Version 部分仅包含以下两个具有平台扩展的CatalogFile 指令：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;CatalogFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ntx86&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MyCatalogFileX86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cat&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;CatalogFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ntamd64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MyCatalogFileX64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cat&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;对于该示例，以下 Inf2Cat 命令将验证是否可以针对 Windows 2000 和 x86 版本的 Windows Vista、Windows Server 2003 和 Windows XP 对驱动程序包进行签名。此外，该命令还将验证是否可以针对 x64 版本的 Windows Vista、Windows Server 2003 和 Windows XP 对驱动程序包进行签名。如果可以针对所有这些版本对程序包进行签名，那么 Inf2Cat 将创建未签名的目录文件 MyCatalogFileX86.cat 和 MyCatalogFileX64.cat。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Inf2Cat&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/driver:C:\MyDriver /os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;XP_X86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;XP_X64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Server2003_X86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Server2003_X64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Vista_X86&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Vista_X64&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>david.dong</name></author><category term="Windows" /><category term="Windows" /><summary type="html">Windows 驱动开发中经常会用到 Windows WDK 自带的 Inf2Cat.exe 工具将驱动程序的 INF 文件转成待签名的 CAT 格式的目录文件。Windows 7 64位系统以上的版本，如果没有对cat或者sys文件进行数字签名，驱动安装会出现问题，或者驱动使用过程也会出现异常。因此，对驱动程序的签名已经是一项必须的操作，这里就介绍一下 Inf2Cat.exe 这个工具。这个工具本身并不能生成签名，但是却是驱动程序签名的必要的一步。</summary></entry><entry><title type="html">浅谈数字签名</title><link href="http://localhost:4000/daviddong.github.io/security/2020/07/01/Security-signature.html" rel="alternate" type="text/html" title="浅谈数字签名" /><published>2020-07-01T18:24:12+08:00</published><updated>2020-07-01T18:24:12+08:00</updated><id>http://localhost:4000/daviddong.github.io/security/2020/07/01/Security-signature</id><content type="html" xml:base="http://localhost:4000/daviddong.github.io/security/2020/07/01/Security-signature.html">&lt;p&gt;近日，腾讯公司状告贵州老干妈的新闻在互联网上闹得沸沸扬扬，💥 大家也应该有所耳闻。腾讯起诉老干妈合作推广后没有付广告费，但随后老干妈否认了此事，称完全不知道这个合作。 😕 后来经调查发现，这是三个人冒充老干妈市场部经理，然后刻了个假公章，就为了获得合作后的游戏礼包并从中牟利。&lt;/p&gt;

&lt;p&gt;且不说这个事情的性质，就从三个骗子用一个假公章，居然把腾讯骗得团团转来看，也折射出来目前的一些问题。&lt;/p&gt;

&lt;p&gt;试想如果腾讯在和老干妈的合同中使用了数字签名… 上述事件根本就不会发生。&lt;/p&gt;

&lt;p&gt;这篇文章就来聊一聊数字签名。文章比较长，心急的读者可以选择直接跳到相关章节阅读。&lt;/p&gt;

&lt;p&gt;本文就从散列函数开始说起，然后引出 👉 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;数字摘要&lt;/code&gt;技术和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;非对称加密&lt;/code&gt;技术，最后介绍基于这两个技术应用的数字签名。&lt;/p&gt;

&lt;h2 id=&quot;15&quot;&gt;1. 数字摘要技术&lt;/h2&gt;
&lt;h3 id=&quot;2&quot;&gt;1.1 散列函数&lt;/h3&gt;
&lt;p&gt;官方解释：散列函数一般是指Hash函数，是一种从任何一种数据中创建小的数字&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;指纹&lt;/code&gt;的方法。散列函数把消息或数据压缩成&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;摘要&lt;/code&gt;，使得数据量变小，将数据的格式固定下来。&lt;/p&gt;

&lt;p&gt;我的理解：散列函数是将任意长度的消息映射成为定长的散列值的函数，以该散列值（消息摘要）作为认证符。&lt;/p&gt;

&lt;h3 id=&quot;3&quot;&gt;1.2 密码散列函数&lt;/h3&gt;
&lt;p&gt;密码散列函数（Cryptographic hash function），又译为加密散列函数，是散列函数的一种。这种散列函数的输入数据，通常被称为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;消息&lt;/code&gt;（message），而它的输出结果，经常被称为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;消息摘要&lt;/code&gt;（message digest）或摘要（digest）。将任意长度的消息压缩到某一固定长度的消息摘要，一个理想的密码散列函数应该有四个主要的特性：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;对于任何一个给定的消息，它都很容易就能运算出散列数值（摘要）。&lt;/li&gt;
  &lt;li&gt;难以由一个已知的散列数值 (摘要)，去推算出原始的消息。（评注：单向，不可逆）&lt;/li&gt;
  &lt;li&gt;在不更动散列数值 (摘要) 的前提下，修改消息内容是不可行的。（评注：唯一性）&lt;/li&gt;
  &lt;li&gt;对于两个不同的消息，它不能给与相同的散列数值 (摘要)。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;单向散列函数生成的信息摘要是不可预见的，消息摘要看起来和原始的数据没有任何的关系。而且，原始数据的任何微小变化都会对生成的信息摘要产生很大的影响。&lt;/p&gt;

&lt;h3 id=&quot;4&quot;&gt;1.3 MD5&lt;/h3&gt;
&lt;p&gt;MD5信息摘要算法（MD5， Message-Digest Algorithm），一种被广泛使用的密码散列函数，可以产生出一个128位（16字节）的散列值（hash value），用于确保信息传输完整一致。&lt;/p&gt;

&lt;p&gt;应用：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;用于密码管理 - 把用户的密码以MD5值（或类似的其它算法）的方式保存起来，用户注册的时候，系统是把用户输入的密码计算成 MD5 值，然后再去和系统中保存的 MD5 值进行比较，如果密文相同，就可以认定密码是正确的，否则密码错误。通过这样的步骤，系统在并不知道用户密码明码的情况下就可以确定用户登录系统的合法性。&lt;/li&gt;
  &lt;li&gt;电子签名 - 使用 MD5算法就可以为任何文件（不管其大小、格式、数量）产生一个独一无二的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;数字指纹&lt;/code&gt;，借助这个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;数字指纹&lt;/code&gt;，通过检查文件前后 MD5 值是否发生了改变，就可以知道源文件是否被改动。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;5&quot;&gt;1.4 SHA&lt;/h3&gt;
&lt;p&gt;安全散列算法（SHA, Secure Hash Algorithm）是一个密码散列函数家族，是FIPS所认证的安全散列算法。SHA家族的五个算法，分别是SHA-1、SHA-224、SHA-256、SHA-384，和SHA-512，后四者有时并称为SHA-2。SHA在许多安全协定中广为使用，包括TLS和SSL、PGP、SSH、S/MIME和IPsec，曾被视为是MD5（更早之前被广为使用的杂凑函数）的后继者。&lt;/p&gt;

&lt;h3 id=&quot;6&quot;&gt;1.5 HMAC&lt;/h3&gt;
&lt;p&gt;HMAC是密钥相关的哈希运算消息认证码（Hash-based Message Authentication Code）的缩写,它可以与任何迭代&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;散列函数&lt;/code&gt;捆绑使用。HMAC算法是一种基于密钥的报文完整性的验证方法 ，其安全性是建立在Hash加密算法基础上的。它要求通信双方&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;共享密钥&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;约定算法&lt;/code&gt;、对报文进行Hash运算，形成固定长度的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;认证码&lt;/code&gt;。通信双方通过&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;认证码&lt;/code&gt;的校验来确定报文的合法性。 HMAC算法可以用来作加密、数字签名、报文验证等。 &lt;br /&gt;
HMAC是一种利用密码学中的&lt;a href=&quot;&quot;&gt;散列函数&lt;/a&gt;来进行消息认证的一种机制，所能提供的消息认证包括两方面内容：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;① 消息完整性认证：能够证明消息内容在传送过程没有被修改。&lt;/li&gt;
  &lt;li&gt;② 信源身份认证：因为通信双方共享了认证的密钥，接收方能够认证发送该数据的信源与所宣称的一致，即能够可靠地确认接收的消息与发送的一致。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;7&quot;&gt;1.6 消息认证码&lt;/h3&gt;
&lt;p&gt;消息认证（message authentication）就是验证消息的完整性，当接收方收到发送方的报文时，接收方能够验证收到的报文是真实的和未被篡改的。&lt;/p&gt;

&lt;p&gt;消息认证所用的摘要算法与一般的对称或非对称加密算法不同，它并不用于防止信息被窃取，而是用于证明原文的完整性和准确性，也就是说，消息认证主要用于防止信息被篡改。&lt;/p&gt;

&lt;p&gt;消息认证码（Message authentication code，缩写为MAC）又译为消息鉴别码、文件消息认证码、讯息鉴别码、信息认证码，是经过特定算法后产生的一小段信息，检查某段消息的完整性，以及作身份验证。&lt;/p&gt;

&lt;p&gt;它可以用来：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;检查消息的完整性&lt;/li&gt;
  &lt;li&gt;鉴别消息的来源&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;消息认证码的算法中，通常会使用带密钥的散列函数（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HMAC&lt;/code&gt;），或者块密码的带认证工作模式（如&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CBC-MAC&lt;/code&gt;）。信息鉴别码不能提供对信息的保密，若要同时实现保密认证，同时需要对信息进行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;加密&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;以上为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;数字摘要&lt;/code&gt;技术的内容，接下来我们讲一讲&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;非对称加密&lt;/code&gt;技术。&lt;/p&gt;

&lt;h2 id=&quot;8&quot;&gt;2. 非对称加密技术&lt;/h2&gt;
&lt;p&gt;非对称加密算法需要两个密钥：公开密钥（public key:简称pk）和私有密钥（Secret key:简称sk）。公钥与私钥是一对，如果用公钥对数据进行加密，只有用对应的私钥才能解密。&lt;/p&gt;

&lt;p&gt;非对称加密算法实现机密信息交换的基本过程是：甲方生成一对密钥并将公钥公开，需要向甲方发送信息的其他角色(乙方)使用该密钥(甲方的公钥)对机密信息进行加密后再发送给甲方；甲方再用自己私钥对加密后的信息进行解密。甲方想要回复乙方时正好相反，使用乙方的公钥对数据进行加密，同理，乙方使用自己的私钥来进行解密。另一方面，甲方可以使用自己的私钥对机密信息进行签名后再发送给乙方；乙方再用甲方的公钥对甲方发送回来的数据进行验签。&lt;/p&gt;

&lt;h3 id=&quot;15&quot;&gt;2.1 RSA&lt;/h3&gt;
&lt;p&gt;RSA是一种公钥密码算法，被用于公钥密码和数字签名。RSA是一种非对称加密技术。&lt;/p&gt;

&lt;p&gt;RSA密钥至少为500位长，一般推荐使用1024位。这就使加密的计算量很大。为减少计算量，在传送信息时，常采用传统加密方法与公开密钥加密方法相结合的方式，即信息采用改进的DES或IDEA对话密钥加密，然后使用RSA密钥加密对话密钥和信息摘要。对方收到信息后，用不同的密钥解密并可核对信息摘要。&lt;/p&gt;

&lt;p&gt;RSA算法的保密强度随其密钥的长度增加而增强。但是，密钥越长，其加解密所耗用的时间也越长。速度一直是RSA的缺陷。一般来说只用于少量数据加密。RSA的速度比对应同样安全级别的对称密码算法要慢很多。&lt;/p&gt;

&lt;p&gt;通过上面的介绍，我们可以总结出RSA的特性:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;既可以用公钥加密然后私钥解密，也可以用私钥加密然后公钥解密&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;公钥加密然后私钥解密，可以用于通信中拥有公钥的一方向拥有私钥的另一方传递机密信息，不被第三方窃听。可应用在原文的加密。&lt;/li&gt;
    &lt;li&gt;那么私钥加密然后公钥解密是用在什么场合呢？就是数字签名（摘要的加密）。&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;9&quot;&gt;3. 数字签名&lt;/h2&gt;
&lt;p&gt;数字签名（又称公钥数字签名）是只有信息的发送者才能产生的别人无法伪造的一段数字串，这段数字串同时也是对信息的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;发送者发送信息真实性&lt;/code&gt;的一个有效证明。&lt;/p&gt;

&lt;p&gt;通过发送数字签名， &lt;br /&gt;
接收者可以&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;确认接收到的消息（报文）的完整性，发送过程中有没有被篡改&lt;/li&gt;
  &lt;li&gt;鉴别发送者的身份&lt;/li&gt;
  &lt;li&gt;防抵赖&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;发送者可以&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;加密信息&lt;/li&gt;
  &lt;li&gt;防止伪造信息&lt;/li&gt;
  &lt;li&gt;防止重放攻击&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;数字签名应用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;非对称密钥加密&lt;/code&gt;技术与&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;数字摘要&lt;/code&gt;技术。&lt;/p&gt;

&lt;p&gt;数字签名技术是将摘要信息用发送者的私钥加密，与原文一起传送给接收者。接收者用自己的公钥解密被加密的摘要信息，然后用HASH函数对收到的原文产生一个摘要信息，与解密的摘要信息对比。如果相同，则说明收到的信息是完整的，在传输过程中没有被修改，否则说明信息被修改过，因此数字签名能够验证信息的完整性。数字签名是个加密的过程，数字签名验证是个解密的过程。&lt;/p&gt;

&lt;p&gt;如果签名者想要对某个文件进行数字签名，公钥必须向&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CA&lt;/code&gt; (身份认证机构）来注册。注册后身份认证机构给你发一数字证书。对文件签名后，你把此数字证书连同文件及签名一起发给接受者，接受者向身份认证机构求证是否真地是用你的密钥签发的文件。&lt;/p&gt;

&lt;h3 id=&quot;10&quot;&gt;3.1 签名过程&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;在正式的数字签名中，发送方首先对发送文件采用哈希算法，得到一个固定长度的消息摘要(Message Digest)；&lt;/li&gt;
  &lt;li&gt;再用自己的私钥(Secret key，SK)对消息摘要进行签名，形成发送方的数字签名。&lt;/li&gt;
  &lt;li&gt;数字签名将作为队件和原文一起发送给接收方；&lt;/li&gt;
  &lt;li&gt;接收方首先用发送方的公钥对数字签名进行解密得到发送方的数字摘要，然后用相同的哈希函数对原文进行哈希计算，得到一个新的消息摘要，最后将消息摘要与收到的消息摘要做比较。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-sign-01.png&quot; alt=&quot;sign-process&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span id=&quot;3.1.1&quot;&gt;&lt;strong&gt;3.1.1 例子&lt;/strong&gt;&lt;/span&gt;     &lt;br /&gt;
一个完整的签名例子如下。&lt;/p&gt;

&lt;p&gt;为了保证信息传送的保密性、真实性、完整性和不可否认性，需要对传送的信息进行数字加密和签名，其传送过程为：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;发送者准备好要传送的数字信息（明文）&lt;/li&gt;
    &lt;li&gt;发送者对数字信息进行哈希运算（SH256/MD5），得到一个信息摘要；&lt;/li&gt;
    &lt;li&gt;发送者用自己的私钥对信息摘要进行加密得到数字签名（RSA），并将其附在数字信息上；&lt;/li&gt;
    &lt;li&gt;发送者随机产生一个加密密钥，并用此密码对要发送的信息（明文）进行加密（对称加密DES），形成密文；&lt;/li&gt;
    &lt;li&gt;发送者用接收者的公钥对刚才随机产生的加密密钥🔑进行加密，将加密后的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DES&lt;/code&gt;密钥连同密文一起传送给接收者；&lt;/li&gt;
    &lt;li&gt;接收者收到传送来的密文和加密过的DES密钥，先用自己的私钥对加密的DES密钥进行解密，得到发送者随机产生的加密密钥；&lt;/li&gt;
    &lt;li&gt;接收者然后用随机密钥🔑对收到的密文进行解密，得到明文的数字信息，然后将随机密钥抛弃；&lt;/li&gt;
    &lt;li&gt;接收者用发送者的公钥对发送者的数字签名进行解密，得到信息摘要；&lt;/li&gt;
    &lt;li&gt;接收者用相同的哈希算法对收到的明文再进行一次哈希运算，得到一个新的信息摘要；&lt;/li&gt;
    &lt;li&gt;接收者将收到的信息摘要和新产生的信息摘要进行比较，如果一致，说明收到的信息没有被修改过，并且确实来自于发送者。&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;11&quot;&gt;3.2 X.509&lt;/h3&gt;
&lt;p&gt;最后我们来说一下数字签名中用于公钥的数字证书，为了证明公钥的有效性和合法性，信息发送者必须向&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CA&lt;/code&gt; (身份认证机构）来注册。注册后身份认证机构给你发一数字证书。信息发送者在签名时必须将数字证书连同文件及签名一起发给接受者，接受者接收到信息后会通过数字证书确认是否手里的公钥为发送者的。&lt;/p&gt;

&lt;p&gt;X.509正是一种数字证书的格式标准。&lt;/p&gt;

&lt;p&gt;&lt;span id=&quot;3.2.1&quot;&gt;&lt;strong&gt;3.2.1 格式&lt;/strong&gt;&lt;/span&gt;         &lt;br /&gt;
X.509规定了数字证书的格式。       &lt;br /&gt;
大致如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot; data-lang=&quot;plaintext&quot;&gt;版本号
序列号
签名算法
颁发者
证书有效期
  开始日期
  终止日期
主题
主题公钥信息
  公钥算法
  主体公钥
颁发者唯一身份信息（可选）
主题唯一身份信息（可选）
扩展信息（可选）
签名&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;span id=&quot;3.2.2&quot;&gt;&lt;strong&gt;3.2.2 扩展名&lt;/strong&gt;&lt;/span&gt;         &lt;br /&gt;
X.509有多种常用的扩展名。不过其中的一些还用于其它用途，就是说具有这个扩展名的文件可能并不是证书，比如说可能只是保存了私钥。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;扩展名&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;.pem(隐私增强型电子邮件)&lt;/td&gt;
      &lt;td&gt;DER编码的证书再进行Base64编码的数据存放在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-----BEGIN CERTIFICATE-----&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-----END CERTIFICATE-----&lt;/code&gt;之中&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;.cer/.crt/.der&lt;/td&gt;
      &lt;td&gt;通常是DER二进制格式的，但Base64编码后也很常见。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;p7b/.p7c&lt;/td&gt;
      &lt;td&gt;PKCS&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;.p12&lt;/td&gt;
      &lt;td&gt;PKCS#12格式，包含证书的同时可能还有带密码保护的私钥。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;.pfx&lt;/td&gt;
      &lt;td&gt;PKCS#12之前的格式（通常用PKCS#12格式，比如那些由IIS产生的PFX文件）。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;12&quot;&gt;3.3 SSL证书&lt;/h3&gt;

&lt;p&gt;符合X.509格式的证书有多种，这里以SSL证书为例。&lt;/p&gt;

&lt;p&gt;常见的场景会是下面这样：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;客户端，比如浏览器会向服务端发送请求，服务端为了证明自己的身份，会发送证书给对方。&lt;/li&gt;
    &lt;li&gt;浏览器读取证书的数字签名部分，用自身根证书列表中对应的公钥证书对其进行解密。如果解密成功，并且证书哈希值与签名内的哈希值匹配一致，可证明站点提供的证书确实是该CA根证书签发的，否则给出风险提示。&lt;/li&gt;
    &lt;li&gt;验证通过之后，使用证书中的公钥对随机数和对称加密算法加密，发送给服务端，服务端用私钥进行解密，获得密钥和加密算法。&lt;/li&gt;
    &lt;li&gt;服务端与浏览器后续通信将会使用新的对称加密算法和随机密钥加密信息。&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;SSL证书从生成到使用涉及到了三次加解密过程：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;证书生成的时候利用私钥签名，验证证书的时候利用公钥解密。&lt;/li&gt;
  &lt;li&gt;确认证书有效后，利用证书中的公钥进行加密，服务端利用私钥解密。&lt;/li&gt;
  &lt;li&gt;双方使用新生成的随机密钥进行数据加解密。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;用一张结构图表示下HTTPS和X.509的关系：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot; data-lang=&quot;plaintext&quot;&gt;    HTTPS
  /       \
HTTP    TLS/SSL
        /      \
   通信内容    确认身份
   对称加密    SSL证书 —— X.509 格式，非对称加密&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;13&quot;&gt;3.4 数字签名应用&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;网站认证&lt;/strong&gt; &lt;br /&gt;
最常见的用处就是用来认证一个网站的身份,用浏览器打开任何一个网站，然后点击地址栏前面的 🔒，点击查看证书，就可以看到网站的数字签名证书了。看过之前的内容我们就知道数字证书其实是对公钥的封装，在公钥的基础上添加了诸如颁发者之类的信息。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/daviddong.github.io/assets/image/others-sign-02.png&quot; alt=&quot;sign-process&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;签名算法&lt;/code&gt;一栏可以看到，它使用的是sha256RSA，也就是使用SHA-256计算摘要，然后使用RSA对摘要进行签名。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;代码签名&lt;/strong&gt; &lt;br /&gt;
而除此之外，还有个地方我们经常碰到数字签名的——代码签名。&lt;br /&gt; 
代码签名用于确保其来源可靠且未被篡改。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;比特币&lt;/strong&gt; &lt;br /&gt;
比特币是一种完全匿名的数字货币，它的身份认证是基于ECDSA。比特币的账户地址就是对公钥计算摘要得到的，向全世界公布。而确认你是账户拥有者的唯一办法就是看你有没有账户对应的私钥。对于比特币中的任意一个交易记录，只有当其中付款方的签名是有效的，它才是有效的。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;14&quot;&gt;3.5 生成数字签名&lt;/h3&gt;
&lt;p&gt;在Windows平台下，Microsoft提供了一组工具用于生成和校验数字签名。关于这部分内容，我会另外写一篇文章介绍如何利用 Microsoft WDK 工具来生成数字签名。&lt;/p&gt;

&lt;p&gt;最后推荐一篇文章，讲的比我好，如果看了以上内容还有不明白的地方，可以继续阅读这篇文章。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2011/08/what_is_a_digital_signature.html&quot;&gt;数字签名是什么？&lt;/a&gt;
来自：&lt;a href=&quot;http://www.ruanyifeng.com/blog/&quot;&gt;阮一峰的网络日志&lt;/a&gt;&lt;/p&gt;</content><author><name>david.dong</name></author><category term="Security" /><category term="Security" /><summary type="html">近日，腾讯公司状告贵州老干妈的新闻在互联网上闹得沸沸扬扬，💥 大家也应该有所耳闻。腾讯起诉老干妈合作推广后没有付广告费，但随后老干妈否认了此事，称完全不知道这个合作。 😕 后来经调查发现，这是三个人冒充老干妈市场部经理，然后刻了个假公章，就为了获得合作后的游戏礼包并从中牟利。</summary></entry></feed>